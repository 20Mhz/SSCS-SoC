
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
echo on

yosys> read_verilog optIIR_Filter.v

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `optIIR_Filter.v' to AST representation.
Generating RTLIL representation for module `\IIR_Filter'.
Note: Assuming pure combinatorial block at optIIR_Filter.v:32 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

yosys> synth -top IIR_Filter

2. Executing SYNTH pass.

yosys> hierarchy -check -top IIR_Filter

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \IIR_Filter

2.1.2. Analyzing design hierarchy..
Top module:  \IIR_Filter
Removed 0 unused modules.

yosys> proc

2.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_init

2.2.3. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:105$20'.
     1/1: $0\cycle_valid[0:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:95$17'.
     1/1: $0\phase[2:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:81$11'.
     1/1: $0\result[15:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
     1/6: $0\Yt[15:0]
     2/6: $0\Y2[15:0]
     3/6: $0\Y1[15:0]
     4/6: $0\X3[15:0]
     5/6: $0\X2[15:0]
     6/6: $0\X1[15:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:32$1'.
     1/2: $0\samplevalue[15:0]
     2/2: $0\coeff[15:0]

yosys> proc_dlatch

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\IIR_Filter.\samplevalue' from process `\IIR_Filter.$proc$optIIR_Filter.v:32$1'.
Latch inferred for signal `\IIR_Filter.\coeff' from process `\IIR_Filter.$proc$optIIR_Filter.v:32$1': $auto$proc_dlatch.cc:408:proc_dlatch$153

yosys> proc_dff

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\IIR_Filter.\cycle_valid' using process `\IIR_Filter.$proc$optIIR_Filter.v:105$20'.
  created $dff cell `$procdff$154' with positive edge clock.
Creating register for signal `\IIR_Filter.\phase' using process `\IIR_Filter.$proc$optIIR_Filter.v:95$17'.
  created $dff cell `$procdff$155' with positive edge clock.
Creating register for signal `\IIR_Filter.\result' using process `\IIR_Filter.$proc$optIIR_Filter.v:81$11'.
  created $dff cell `$procdff$156' with positive edge clock.
Creating register for signal `\IIR_Filter.\X1' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$157' with positive edge clock.
Creating register for signal `\IIR_Filter.\X2' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$158' with positive edge clock.
Creating register for signal `\IIR_Filter.\X3' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$159' with positive edge clock.
Creating register for signal `\IIR_Filter.\Y1' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$160' with positive edge clock.
Creating register for signal `\IIR_Filter.\Y2' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$161' with positive edge clock.
Creating register for signal `\IIR_Filter.\Yt' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$162' with positive edge clock.

yosys> proc_clean

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:105$20'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:105$20'.
Found and cleaned up 2 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:95$17'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:95$17'.
Found and cleaned up 3 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:81$11'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:81$11'.
Found and cleaned up 3 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:60$7'.
Found and cleaned up 5 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:32$1'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:32$1'.
Cleaned up 16 empty switches.

yosys> opt_expr

2.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$eq$optIIR_Filter.v:34$2' in module `IIR_Filter' with $logic_not.
Replacing $eq cell `$eq$optIIR_Filter.v:46$5' in module `IIR_Filter' with $logic_not.
Replacing $eq cell `$eq$optIIR_Filter.v:50$6' in module `IIR_Filter' with $logic_not.
Replacing $eq cell `$eq$optIIR_Filter.v:61$8' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:61$8_Y = \rst'.
Replacing $eq cell `$eq$optIIR_Filter.v:69$9' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:69$9_Y = \en'.
Replacing $eq cell `$eq$optIIR_Filter.v:82$12' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:82$12_Y = \rst'.
Replacing $shr cell `$shr$optIIR_Filter.v:88$14' (B=4, SHR=4) in module `IIR_Filter' with fixed wiring: { 4'0000 $mul$optIIR_Filter.v:88$13_Y [15:4] }
Replacing $eq cell `$eq$optIIR_Filter.v:96$18' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:96$18_Y = \rst'.
Replacing $eq cell `$eq$optIIR_Filter.v:106$21' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:106$21_Y = \rst'.
Replacing $eq cell `$eq$optIIR_Filter.v:108$22' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:108$22_Y = \en'.
Replacing $mux cell `$procmux$97' (?) in module `\IIR_Filter' with constant driver `$procmux$97_Y = \a0'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$121' (const_or) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$122 = 1'1'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$125' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$126 = $auto$rtlil.cc:1629:And$124'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$127' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$128 = $auto$rtlil.cc:1604:ReduceOr$126'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$131' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$132 = $auto$rtlil.cc:1629:And$130'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$133' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$134 = $auto$rtlil.cc:1604:ReduceOr$132'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$137' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$138 = $auto$rtlil.cc:1629:And$136'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$139' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$140 = $auto$rtlil.cc:1604:ReduceOr$138'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$143' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$144 = $auto$rtlil.cc:1629:And$142'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$145' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$146 = $auto$rtlil.cc:1604:ReduceOr$144'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$149' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$150 = $auto$rtlil.cc:1629:And$148'.

yosys> opt_clean

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused `$mux' cell `$procmux$64'.
  removing unused `$mux' cell `$procmux$67'.
  removing unused `$mux' cell `$procmux$70'.
  removing unused `$mux' cell `$procmux$73'.
  removing unused `$mux' cell `$procmux$76'.
  removing unused `$mux' cell `$procmux$79'.
  removing unused `$mux' cell `$procmux$82'.
  removing unused `$mux' cell `$procmux$85'.
  removing unused `$mux' cell `$procmux$88'.
  removing unused `$mux' cell `$procmux$91'.
  removing unused `$dff' cell `$procdff$157'.
  removing unused `$dff' cell `$procdff$158'.
  removing unused `$dff' cell `$procdff$159'.
  removing unused non-port wire \X3.
  removing unused non-port wire \X2.
  removing unused non-port wire \X1.
  removed 3 unused temporary wires.

yosys> check

2.5. Executing CHECK pass (checking for obvious problems).
checking module IIR_Filter..
found and reported 0 problems.

yosys> opt

2.6. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.6.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
  Cell `$eq$optIIR_Filter.v:46$5' is identical to cell `$eq$optIIR_Filter.v:34$2'.
    Redirecting output \Y: $eq$optIIR_Filter.v:46$5_Y = $eq$optIIR_Filter.v:34$2_Y
    Removing $logic_not cell `$eq$optIIR_Filter.v:46$5' from module `\IIR_Filter'.
  Cell `$eq$optIIR_Filter.v:50$6' is identical to cell `$eq$optIIR_Filter.v:34$2'.
    Redirecting output \Y: $eq$optIIR_Filter.v:50$6_Y = $eq$optIIR_Filter.v:34$2_Y
    Removing $logic_not cell `$eq$optIIR_Filter.v:50$6' from module `\IIR_Filter'.
  Cell `$auto$proc_dlatch.cc:238:make_hold$113' is identical to cell `$auto$proc_dlatch.cc:238:make_hold$111'.
    Redirecting output \Y: $auto$rtlil.cc:1600:Not$114 = $auto$rtlil.cc:1600:Not$112
    Removing $not cell `$auto$proc_dlatch.cc:238:make_hold$113' from module `\IIR_Filter'.
  Cell `$auto$proc_dlatch.cc:238:make_hold$119' is identical to cell `$auto$proc_dlatch.cc:238:make_hold$111'.
    Redirecting output \Y: $auto$rtlil.cc:1600:Not$120 = $auto$rtlil.cc:1600:Not$112
    Removing $not cell `$auto$proc_dlatch.cc:238:make_hold$119' from module `\IIR_Filter'.
Removed a total of 4 cells.

yosys> opt_muxtree

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$49 (pure)
    Root of a mux tree: $procmux$55 (pure)
    Root of a mux tree: $procmux$61 (pure)
    Root of a mux tree: $procmux$94 (pure)
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$106.
Removed 1 multiplexer ports.

yosys> opt_reduce

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

2.6.8. Executing OPT_EXPR pass (perform const folding).

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$49 (pure)
    Root of a mux tree: $procmux$55 (pure)
    Root of a mux tree: $procmux$61 (pure)
    Root of a mux tree: $procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

yosys> opt_reduce

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

2.6.15. Executing OPT_EXPR pass (perform const folding).

2.6.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell IIR_Filter.$eq$optIIR_Filter.v:38$3 ($eq).
Removed top 1 bits (of 3) from port B of cell IIR_Filter.$eq$optIIR_Filter.v:42$4 ($eq).
Removed top 4 bits (of 16) from port B of cell IIR_Filter.$add$optIIR_Filter.v:88$15 ($add).
Removed top 31 bits (of 32) from port B of cell IIR_Filter.$add$optIIR_Filter.v:101$19 ($add).
Removed top 29 bits (of 32) from port Y of cell IIR_Filter.$add$optIIR_Filter.v:101$19 ($add).
Removed top 29 bits (of 32) from wire IIR_Filter.$add$optIIR_Filter.v:101$19_Y.

yosys> alumacc

2.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module IIR_Filter:
  creating $macc model for $add$optIIR_Filter.v:101$19 ($add).
  creating $macc model for $add$optIIR_Filter.v:88$15 ($add).
  creating $macc model for $mul$optIIR_Filter.v:88$13 ($mul).
  creating $alu model for $macc $add$optIIR_Filter.v:88$15.
  creating $alu model for $macc $add$optIIR_Filter.v:101$19.
  creating $macc cell for $mul$optIIR_Filter.v:88$13: $auto$alumacc.cc:354:replace_macc$164
  creating $alu cell for $add$optIIR_Filter.v:101$19: $auto$alumacc.cc:470:replace_alu$165
  creating $alu cell for $add$optIIR_Filter.v:88$15: $auto$alumacc.cc:470:replace_alu$168
  created 2 $alu and 1 $macc cells.

yosys> share

2.9. Executing SHARE pass (SAT-based resource sharing).

yosys> opt

2.10. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.10.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$49 (pure)
    Root of a mux tree: $procmux$55 (pure)
    Root of a mux tree: $procmux$61 (pure)
    Root of a mux tree: $procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

yosys> opt_reduce

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

2.10.8. Executing OPT_EXPR pass (perform const folding).

2.10.9. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

2.11. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> fsm_opt

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -fast

2.12. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.12.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

2.12.5. Finished fast OPT passes.

yosys> memory -nomap

2.13. Executing MEMORY pass.

yosys> memory_dff

2.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

yosys> opt_clean

2.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> memory_share

2.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_clean

2.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> memory_collect

2.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

2.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt -fast -full

2.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

2.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$28' in module `IIR_Filter' with or-gate.

yosys> opt_merge

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

2.15.5. Finished fast OPT passes.

yosys> memory_map

2.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

yosys> opt -full

2.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

2.17.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

2.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

2.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$109 (pure)
    Root of a mux tree: $procmux$25 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$49 (pure)
    Root of a mux tree: $procmux$55 (pure)
    Root of a mux tree: $procmux$61 (pure)
    Root of a mux tree: $procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

2.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr -full

2.17.8. Executing OPT_EXPR pass (perform const folding).

2.17.9. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping IIR_Filter.$eq$optIIR_Filter.v:34$2 ($logic_not) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:38$3 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:42$4 ($eq) with simplemap.

2.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 3
Parameter \Y_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3'.

2.18.3. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$165 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3.
Mapping IIR_Filter.$eq$optIIR_Filter.v:77$10 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:89$16 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:110$23 ($eq) with simplemap.
Mapping IIR_Filter.$procmux$25 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$28 ($or) with simplemap.
Mapping IIR_Filter.$procmux$31 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$34 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$37 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$40 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$43 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$46 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$49 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$52 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$55 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$58 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$61 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$94 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$100 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$103 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$109 ($mux) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$111 ($not) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:354:replace_macc$164 ($macc) with maccmap.
  add \samplevalue * \coeff (16x16 bits, unsigned)
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$115 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$117 ($not) with simplemap.

2.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 12
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=16\Y_WIDTH=16'.

2.18.5. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=16\Y_WIDTH=16.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$123 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$129 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$135 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$141 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$147 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:408:proc_dlatch$151 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:408:proc_dlatch$153 ($dlatch) with simplemap.
Mapping IIR_Filter.$procdff$154 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$155 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$156 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$160 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$161 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$162 ($dff) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:263$250 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.$and$<techmap.v>:260$248 ($and) with simplemap.

2.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=3'.

yosys [$paramod\_90_lcu\WIDTH=3]> proc

2.18.7. Executing PROC pass (convert processes to netlists).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_clean

2.18.7.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=3]> proc_rmdead

2.18.7.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys [$paramod\_90_lcu\WIDTH=3]> proc_init

2.18.7.3. Executing PROC_INIT pass (extract init attributes).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_arst

2.18.7.4. Executing PROC_ARST pass (detect async resets in processes).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_mux

2.18.7.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$683'.
     1/6: $0\p[2:0] [2]
     2/6: $0\g[2:0] [2]
     3/6: $0\p[2:0] [1]
     4/6: $0\g[2:0] [1]
     5/6: $0\g[2:0] [0]
     6/6: $0\p[2:0] [0]

yosys [$paramod\_90_lcu\WIDTH=3]> proc_dlatch

2.18.7.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\g' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$683'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\p' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$683'.

yosys [$paramod\_90_lcu\WIDTH=3]> proc_dff

2.18.7.7. Executing PROC_DFF pass (convert process syncs to FFs).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_clean

2.18.7.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$683'.
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=3]> opt -fast

2.18.8. Executing OPT pass (performing simple optimizations).

yosys [$paramod\_90_lcu\WIDTH=3]> opt_expr

2.18.8.1. Executing OPT_EXPR pass (perform const folding).

yosys [$paramod\_90_lcu\WIDTH=3]> opt_merge

2.18.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=3'.
Removed a total of 0 cells.

yosys [$paramod\_90_lcu\WIDTH=3]> opt_rmdff

2.18.8.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys [$paramod\_90_lcu\WIDTH=3]> opt_clean

2.18.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=3..
  removing unused `$and' cell `$and$<techmap.v>:222$688'.
  removing unused `$and' cell `$and$<techmap.v>:230$691'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

2.18.8.5. Finished fast OPT passes.

2.18.9. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$165.lcu using $paramod\_90_lcu\WIDTH=3.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.$ternary$<techmap.v>:258$247 ($mux) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.$not$<techmap.v>:258$246 ($not) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$165.B_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$165.A_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$492 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$494 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$496 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$498 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$500 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$502 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$504 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$506 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$508 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$510 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$512 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$514 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$516 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$518 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$520 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$522 ($and) with simplemap.

2.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_fa'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_fa\WIDTH=16'.

2.18.11. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$526 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$529 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$532 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$535 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$538 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$541 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$544 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$547 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$550 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$553 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$556 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$559 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$562 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$565 using $paramod\_90_fa\WIDTH=16.

2.18.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 16
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16'.

2.18.13. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$566 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$575 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:263$576 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$574 ($and) with simplemap.

2.18.14. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=16'.

yosys [$paramod\_90_lcu\WIDTH=16]> proc

2.18.15. Executing PROC pass (convert processes to netlists).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_clean

2.18.15.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=16]> proc_rmdead

2.18.15.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys [$paramod\_90_lcu\WIDTH=16]> proc_init

2.18.15.3. Executing PROC_INIT pass (extract init attributes).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_arst

2.18.15.4. Executing PROC_ARST pass (detect async resets in processes).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_mux

2.18.15.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1047'.
     1/32: $0\p[15:0] [14]
     2/32: $0\g[15:0] [14]
     3/32: $0\p[15:0] [12]
     4/32: $0\g[15:0] [12]
     5/32: $0\p[15:0] [10]
     6/32: $0\g[15:0] [10]
     7/32: $0\p[15:0] [8]
     8/32: $0\g[15:0] [8]
     9/32: $0\p[15:0] [6]
    10/32: $0\g[15:0] [6]
    11/32: $0\p[15:0] [4]
    12/32: $0\g[15:0] [4]
    13/32: $0\p[15:0] [2]
    14/32: $0\g[15:0] [2]
    15/32: $0\p[15:0] [13]
    16/32: $0\g[15:0] [13]
    17/32: $0\p[15:0] [9]
    18/32: $0\g[15:0] [9]
    19/32: $0\p[15:0] [5]
    20/32: $0\g[15:0] [5]
    21/32: $0\p[15:0] [11]
    22/32: $0\g[15:0] [11]
    23/32: $0\p[15:0] [15]
    24/32: $0\g[15:0] [15]
    25/32: $0\p[15:0] [7]
    26/32: $0\g[15:0] [7]
    27/32: $0\p[15:0] [3]
    28/32: $0\g[15:0] [3]
    29/32: $0\p[15:0] [1]
    30/32: $0\g[15:0] [1]
    31/32: $0\g[15:0] [0]
    32/32: $0\p[15:0] [0]

yosys [$paramod\_90_lcu\WIDTH=16]> proc_dlatch

2.18.15.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\g' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1047'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\p' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1047'.

yosys [$paramod\_90_lcu\WIDTH=16]> proc_dff

2.18.15.7. Executing PROC_DFF pass (convert process syncs to FFs).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_clean

2.18.15.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1047'.
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=16]> opt -fast

2.18.16. Executing OPT pass (performing simple optimizations).

yosys [$paramod\_90_lcu\WIDTH=16]> opt_expr

2.18.16.1. Executing OPT_EXPR pass (perform const folding).

yosys [$paramod\_90_lcu\WIDTH=16]> opt_merge

2.18.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=16'.
Removed a total of 0 cells.

yosys [$paramod\_90_lcu\WIDTH=16]> opt_rmdff

2.18.16.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys [$paramod\_90_lcu\WIDTH=16]> opt_clean

2.18.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=16..
  removing unused `$and' cell `$and$<techmap.v>:222$1052'.
  removing unused `$and' cell `$and$<techmap.v>:222$1076'.
  removing unused `$and' cell `$and$<techmap.v>:222$1088'.
  removing unused `$and' cell `$and$<techmap.v>:222$1094'.
  removing unused `$and' cell `$and$<techmap.v>:230$1097'.
  removing unused `$and' cell `$and$<techmap.v>:230$1100'.
  removing unused `$and' cell `$and$<techmap.v>:230$1103'.
  removing unused `$and' cell `$and$<techmap.v>:230$1106'.
  removing unused `$and' cell `$and$<techmap.v>:230$1109'.
  removing unused `$and' cell `$and$<techmap.v>:230$1112'.
  removing unused `$and' cell `$and$<techmap.v>:230$1115'.
  removing unused `$and' cell `$and$<techmap.v>:230$1118'.
  removing unused `$and' cell `$and$<techmap.v>:230$1121'.
  removing unused `$and' cell `$and$<techmap.v>:230$1124'.
  removing unused `$and' cell `$and$<techmap.v>:230$1127'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

2.18.16.5. Finished fast OPT passes.

2.18.17. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573 ($mux) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$not$<techmap.v>:258$572 ($not) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168.B_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168.A_conv ($pos) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$or$<techmap.v>:229$690 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$or$<techmap.v>:221$687 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$or$<techmap.v>:212$685 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:229$689 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:221$686 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:212$684 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1095 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1091 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1085 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1082 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1079 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1073 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1070 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1067 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1064 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1061 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1058 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:222$1055 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1092 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1089 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1086 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1083 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1080 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1077 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1074 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1071 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1068 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1065 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1062 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1059 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1056 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1053 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1050 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:212$1048 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$526.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$526.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$526.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$529.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$541.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$550.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$566.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960 ($mux) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959 ($not) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$566.B_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$566.A_conv ($pos) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1098 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1101 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1104 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1107 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1110 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1113 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1116 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1119 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1122 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1125 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:212$1049 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1051 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1054 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1057 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1060 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1063 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1066 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1069 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1072 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1075 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1078 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1081 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1084 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1087 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1090 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1093 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1096 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1099 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1102 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1105 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1108 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1111 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1114 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1117 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1120 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1123 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1126 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:212$1048 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1050 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1053 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1056 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1059 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1062 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1065 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1068 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1071 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1074 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1077 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1080 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1083 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1086 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1089 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1092 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1055 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1058 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1061 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1064 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1067 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1070 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1073 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1079 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1082 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1085 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:222$1091 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1095 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1098 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1101 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1104 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1107 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1110 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1113 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1116 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1119 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1122 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1125 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:212$1049 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1051 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1054 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1057 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1060 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1063 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1066 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1069 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1072 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1075 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1078 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1081 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1084 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1087 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1090 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1093 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1096 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1099 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1102 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1105 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1108 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1111 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1114 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1117 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1120 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1123 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:229$1126 ($or) with simplemap.
No more expansions possible.

yosys> opt -fast

2.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$441' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$440' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$439' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$438' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$437' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$436' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$435' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$434' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$433' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$432' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$431' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$430' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$429' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$428' in module `IIR_Filter'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$714' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$495 [0] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$427' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$442' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$237' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$233 [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$235' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$233 [0] = \phase [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$570' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$116 = $auto$simplemap.cc:256:simplemap_eqne$238'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$693' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$ternary$<techmap.v>:258$247_Y [1] = \phase [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$668' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249_Y [1] = \phase [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$223' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$220 [1] = \phase [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$224' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$220 [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$253' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$251 [0] = \phase [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$280' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$277 [1] = \phase [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$692' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$ternary$<techmap.v>:258$247_Y [0] = \phase [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$674' (1?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$and$<techmap.v>:260$248_Y [0] = \phase [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1165' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:212$684_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1162' (?0) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$167 [0] = \phase [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$290' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$670' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:263$250_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$694' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$ternary$<techmap.v>:258$247_Y [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$669' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249_Y [2] = \phase [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$675' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$and$<techmap.v>:260$248_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1161' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$167 [1] = $techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:221$686_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1129' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [1] = \result [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$942' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$925' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$893' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$909' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1581' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1549' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1565' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1517' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$924' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$892' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$908' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1580' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1532' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$875' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$843' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$859' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1499' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1467' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1483' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1435' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$876' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$844' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$860' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1500' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1452' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1820' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1788' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1804' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1756' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$827' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$795' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$505 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$811' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1419' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1387' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1403' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1355' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$779' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$503 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$747' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$499 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$763' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$501 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1339' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1307' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1323' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1275' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$828' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$796' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$505 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$812' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1420' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1372' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1740' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1708' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1724' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1676' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1533' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1468' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1484' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1436' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$877' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$845' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$861' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1501' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1453' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1821' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1773' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1981' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1949' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1965' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1917' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2142' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2110' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2126' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2078' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2094' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1933' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1692' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1291' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$730' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$497 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1258' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1226' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1242' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1194' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$731' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$497 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1211' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:190$957_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1659' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1627' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1643' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1595' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$780' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$503 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$748' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$499 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$764' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$501 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1340' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1292' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1227' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1195' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$or$<techmap.v>:190$958_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$and$<techmap.v>:189$955_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1612' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:190$957_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1900' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1868' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1884' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1836' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1388' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1404' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1356' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1308' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1324' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1276' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$829' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$797' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$505 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$813' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1421' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1373' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1741' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1693' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1628' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1596' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$or$<techmap.v>:190$958_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$955_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$781' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$503 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$765' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$501 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1341' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:189$954_Y [3] = $auto$rtlil.cc:1629:And$499 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1293' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:190$957_Y [3] = $auto$rtlil.cc:1629:And$499 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1853' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:190$957_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2061' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2029' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2045' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1997' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1789' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1805' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1757' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1709' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1725' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1677' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$926' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$894' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$910' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1582' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1534' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1469' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1485' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1437' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$878' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$846' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$862' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1502' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1454' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1822' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1774' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1982' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1934' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1869' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1837' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$or$<techmap.v>:190$958_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$955_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1389' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1405' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1357' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1309' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1325' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1277' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$830' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$798' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$505 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$814' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1422' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1374' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1742' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1694' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$782' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$503 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1294' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:190$957_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1854' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:190$957_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2014' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2222' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2190' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2206' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2158' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$943' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1550' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1566' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1518' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1950' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1966' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1918' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2143' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2095' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2030' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1998' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1790' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1806' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1758' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1710' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1726' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1678' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$927' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$895' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$911' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1583' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1535' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1470' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1486' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1438' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$879' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$847' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$863' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1503' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1455' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1823' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1775' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1983' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1935' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1870' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1838' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$or$<techmap.v>:190$958_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$955_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1390' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1406' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1358' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1310' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1278' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$or$<techmap.v>:190$958_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$831' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$799' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$505 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$815' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1423' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1375' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1743' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1695' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2015' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2175' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2303' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2255' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$941' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1548' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1564' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1516' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$923' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$891' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$907' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1579' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1531' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$874' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$842' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$858' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1498' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1466' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1482' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1434' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1451' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1819' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1787' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1803' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1755' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$826' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$794' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$505 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$810' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1418' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1386' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1402' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1354' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$778' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$503 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$746' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$499 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$762' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$501 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1338' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1306' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1322' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1274' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1371' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1739' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1707' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1723' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1675' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1772' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1980' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1948' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1964' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1916' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2141' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2109' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2125' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2077' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2093' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1932' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1691' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1290' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$529.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1210' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:190$957_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1658' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1626' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1642' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1594' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1611' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:190$957_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1899' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1867' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1883' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1835' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1852' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:190$957_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2060' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2028' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2044' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1996' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2013' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2221' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2189' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2205' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2157' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2174' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2302' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2270' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2286' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2238' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2384' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2368' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2336' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2254' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$940' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1547' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1563' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1515' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$922' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$890' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$906' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1578' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1530' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1450' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1818' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1786' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1802' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1754' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1370' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1738' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1706' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1722' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1674' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1771' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1979' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1947' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1963' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1915' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2140' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2108' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2124' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2076' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2092' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1931' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1690' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1610' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:190$957_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1898' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1866' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1882' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1834' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1851' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:190$957_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2059' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2027' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2043' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1995' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2012' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2220' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2188' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2204' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2156' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2173' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2301' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2269' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2285' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2237' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2383' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2367' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2351' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2335' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$939' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1546' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1562' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1514' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1770' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1978' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1946' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1962' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1914' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2139' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2107' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2123' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2075' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2091' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1930' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1850' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:190$957_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2058' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2026' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2042' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1994' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2011' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2219' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2187' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2203' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2155' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2172' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2300' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2252' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$938' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2138' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2106' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2122' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2074' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2090' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2010' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2218' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2186' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2202' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2154' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2171' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2299' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2267' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2283' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2235' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2381' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2365' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2333' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2253' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2268' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2284' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2236' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2382' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2366' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2334' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2251' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2170' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2298' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2266' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2282' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2234' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [0] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2380' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2364' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2348' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2332' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2250' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2379' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [0] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2363' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2347' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2331' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2432' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:212$1048_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2470' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2433' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1050_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2471' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2441' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1074_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2350' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2349' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2434' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1053_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2472' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1054_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2479' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2464' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1110_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2491' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2319' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1128' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [0] = \result [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2318' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1193' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:212$1048_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2405' (?0) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$574_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$980' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:263$576_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$575_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1130' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [2] = \result [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2111' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2127' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2079' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2191' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2159' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$944' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1551' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1567' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1519' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1951' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1967' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1919' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2144' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2096' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2031' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1999' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1791' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1807' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1759' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1711' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1727' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1679' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$928' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$896' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$912' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1584' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1536' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1471' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1487' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1439' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$880' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$848' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$864' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1504' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1456' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1824' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1776' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1984' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1936' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1391' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1407' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1359' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$832' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$816' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$507 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1424' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [6] = $auto$rtlil.cc:1629:And$505 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1376' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [6] = $auto$rtlil.cc:1629:And$505 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1696' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2016' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:190$957_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$556.$xor$<techmap.v>:189$954_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2176' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2256' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2271' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2287' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2239' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2385' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$not$<techmap.v>:258$959_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2369' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2337' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2460' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1098_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2352' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2435' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1056_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2473' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1057_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2487' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2320' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1131' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [3] = \result [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2112' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2128' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2080' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2192' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2160' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$945' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1552' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1568' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1520' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1952' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1968' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1920' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2145' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2097' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2032' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2000' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$556.$or$<techmap.v>:190$958_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$556.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1792' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1808' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1760' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1712' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1680' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$929' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$897' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$913' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1585' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1537' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1472' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1488' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1440' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$881' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$849' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$865' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1505' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1457' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1825' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1777' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1985' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1937' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1392' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1408' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1360' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$833' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$509 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1377' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:190$957_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$532.$xor$<techmap.v>:189$954_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1697' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:190$957_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$544.$xor$<techmap.v>:189$954_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2177' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2257' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2272' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2240' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2370' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2353' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2465' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1113_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2492' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2321' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [7] = $techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:262$962_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1132' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [4] = \result [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2113' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2129' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2081' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2193' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2161' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$946' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1553' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1569' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1521' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1953' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1969' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1921' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2146' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2098' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1793' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1809' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1761' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1713' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1681' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$544.$or$<techmap.v>:190$958_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$930' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$898' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$914' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1586' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1538' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1473' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1489' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1441' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$882' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$850' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$511 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$866' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1506' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1458' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1826' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1778' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1986' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1938' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$544.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1393' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1361' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$532.$or$<techmap.v>:190$958_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$532.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2178' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2258' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2273' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2241' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2371' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2445' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1086_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2442' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1077_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2436' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:221$1059_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2474' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1060_Y = $techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2480' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$or$<techmap.v>:221$1078_Y = $techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2483' (?0) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [7] = $techmap$auto$maccmap.cc:240:synth$566.$and$<techmap.v>:260$961_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1133' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [5] = \result [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2114' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2130' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2082' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2194' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2162' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$947' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1554' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1570' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1522' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1954' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1970' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1922' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2147' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2099' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1794' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1810' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1762' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$931' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$899' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$915' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1587' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1539' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1474' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1490' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1442' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$883' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$867' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$513 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1507' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [9] = $auto$rtlil.cc:1629:And$511 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1459' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [9] = $auto$rtlil.cc:1629:And$511 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1827' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [9] = $auto$rtlil.cc:1629:And$511 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1779' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [9] = $auto$rtlil.cc:1629:And$511 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1939' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2179' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:190$957_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$562.$xor$<techmap.v>:189$954_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2259' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2274' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2242' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2372' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1134' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [6] = \result [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2115' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2131' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2083' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2195' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2163' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$562.$or$<techmap.v>:190$958_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$562.$and$<techmap.v>:189$955_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$948' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1555' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1571' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1523' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1955' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1923' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2148' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2100' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1795' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1811' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1763' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$932' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$900' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$916' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1588' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1540' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1475' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1491' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1443' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$884' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$515 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1460' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:190$957_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1828' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1780' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$535.$xor$<techmap.v>:189$954_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1940' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2260' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2275' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2243' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2373' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1135' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [7] = \result [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2116' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2132' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2084' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$949' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1556' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1572' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1524' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1956' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1924' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2149' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2101' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1796' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1812' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1764' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$933' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$901' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$517 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$917' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1589' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1541' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1476' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$956_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1444' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$535.$or$<techmap.v>:190$958_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$535.$and$<techmap.v>:189$955_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1781' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:190$957_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$547.$xor$<techmap.v>:189$954_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1941' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:190$957_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$553.$xor$<techmap.v>:189$954_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2261' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2276' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2244' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2374' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1136' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [8] = \result [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2117' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2133' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2085' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$950' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1557' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1573' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1525' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1957' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$956_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1925' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2150' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2102' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$553.$and$<techmap.v>:189$955_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1797' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$956_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1765' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$547.$or$<techmap.v>:190$958_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$547.$and$<techmap.v>:189$955_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$934' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$918' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$519 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1590' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [12] = $auto$rtlil.cc:1629:And$517 [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1542' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [12] = $auto$rtlil.cc:1629:And$517 [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2262' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2277' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2245' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2375' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1137' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [9] = \result [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2118' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2134' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2086' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$951' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1558' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1574' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1526' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2151' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2103' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$553.$or$<techmap.v>:190$958_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$935' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$521 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1543' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:190$957_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$538.$xor$<techmap.v>:189$954_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2263' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2278' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2246' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2376' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1138' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [10] = \result [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2119' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2135' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2087' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$952' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$523 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1559' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$956_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1527' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$538.$or$<techmap.v>:190$958_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$538.$and$<techmap.v>:189$955_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2104' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:190$957_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$559.$xor$<techmap.v>:189$954_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2264' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:190$957_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$565.$xor$<techmap.v>:189$954_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2279' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2247' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2377' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1139' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [11] = \result [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2120' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$956_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2088' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$559.$or$<techmap.v>:190$958_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$559.$and$<techmap.v>:189$955_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2280' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$956_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2248' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$565.$or$<techmap.v>:190$958_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2378' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$ternary$<techmap.v>:258$960_Y [15] = $techmap$auto$maccmap.cc:114:fulladd$565.$and$<techmap.v>:189$955_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1140' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [12] = \result [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$976' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$575_Y [12] = \result [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1141' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [13] = \result [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$977' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$575_Y [13] = \result [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1009' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$574_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2430' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [12] = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1122_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1142' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [14] = \result [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$978' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$575_Y [14] = \result [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1010' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$574_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1186' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1068_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2412' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1069_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2424' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [13] = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1104_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1143' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$573_Y [15] = \result [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$979' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$575_Y [15] = \result [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1011' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$574_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2431' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [14] = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1125_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$316' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$315' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$317' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$318' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$319' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$320' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$321' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$322' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$323' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$324' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$325' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$326' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$327' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$328' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$329' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$330' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$348' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$347' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$349' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$350' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$351' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$352' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$353' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$354' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$355' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$356' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$357' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$358' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$359' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$360' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$361' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$362' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$444' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$443' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$445' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$446' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$447' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$448' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$449' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$450' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$451' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$452' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$453' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$454' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$455' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$456' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$457' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$458' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$460' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$459' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$461' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$462' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$463' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$464' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$465' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$466' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$467' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$468' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$469' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$470' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$471' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$472' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$473' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$474' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$476' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$475' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$477' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$478' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$479' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$480' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$481' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$482' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$483' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$484' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$485' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$486' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$487' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$488' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$489' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$490' in module `IIR_Filter'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$491' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$112 = $auto$simplemap.cc:168:logic_reduce$217'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$571' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$118 = $auto$simplemap.cc:256:simplemap_eqne$225'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$577' (?1) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$126 = $auto$simplemap.cc:168:logic_reduce$217'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$676' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$and$<techmap.v>:260$248_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1160' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$167 [2] = $techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:229$689_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$673' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:263$250_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$165.lcu.$and$<techmap.v>:229$689_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1181' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1083_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1012' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$574_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1185' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1071_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2413' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1072_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2417' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1084_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2419' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1090_Y = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1089_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$996' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:263$576_Y [16] = $auto$alumacc.cc:484:replace_alu$170 [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2315' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$526.$xor$<techmap.v>:189$954_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2314' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [0] = $auto$rtlil.cc:1629:And$493 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2316' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$541.$xor$<techmap.v>:189$954_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2463' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.lcu.$and$<techmap.v>:229$1107_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2490' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$569 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2317' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$550.$xor$<techmap.v>:189$954_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2330' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$566.$xor$<techmap.v>:263$963_Y [16] = $auto$maccmap.cc:247:synth$569 [15]'.

yosys> opt_merge

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$279' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$667'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$277 [0] = $techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$279' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$266' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$667'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$264 [0] = $techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$266' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$268' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$281'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$264 [2] = $auto$simplemap.cc:250:simplemap_eqne$277 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$268' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$254' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$267'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$251 [1] = $auto$simplemap.cc:250:simplemap_eqne$264 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$254' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$255' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$281'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$251 [2] = $auto$simplemap.cc:250:simplemap_eqne$277 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$255' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$236' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$267'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$233 [1] = $auto$simplemap.cc:250:simplemap_eqne$264 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$236' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$222' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$667'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$220 [0] = $techmap$auto$alumacc.cc:470:replace_alu$165.$xor$<techmap.v>:262$249_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$222' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$241' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$259'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$240 = $auto$simplemap.cc:127:simplemap_reduce$258
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$241' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$228' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$285'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$227 = $auto$simplemap.cc:127:simplemap_reduce$284
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$228' from module `\IIR_Filter'.
Removed a total of 9 cells.

yosys> opt_rmdff

2.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$698'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$697'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$695'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$219'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$232'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$245'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$263'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$276'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$289'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$696'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1145'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1144'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1146'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1147'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1148'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1149'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1150'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1151'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1152'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1153'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1154'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1155'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1156'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1157'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1158'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1159'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1163'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1167'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1168'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1171'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1178'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1179'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1209'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1241'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1257'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1259'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1289'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1321'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1337'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1369'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1401'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1417'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1449'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1481'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1497'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1529'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1561'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1577'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1609'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1641'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1657'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1660'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1689'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1721'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1737'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1769'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1801'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1817'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1849'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1881'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1897'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1901'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1929'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1961'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1977'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2009'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2041'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2057'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2089'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2121'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2137'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2169'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2201'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2217'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2249'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2281'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2297'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2362'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2386'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2387'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2388'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2389'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2390'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2391'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2392'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2393'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2394'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2420'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2440'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2444'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2446'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2447'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2448'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2449'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2450'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2454'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2455'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2457'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2458'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2478'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2482'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2484'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2485'.

2.19.5. Finished fast OPT passes.

yosys> abc -fast

2.20. Executing ABC pass (technology mapping using ABC).

2.20.1. Extracting gate netlist of module `\IIR_Filter' to `<abc-temp-dir>/input.blif'..
Extracted 998 gates and 1150 wires to a netlist network with 150 inputs and 85 outputs.

2.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

2.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      297
ABC RESULTS:              AOI3 cells:       70
ABC RESULTS:               MUX cells:      114
ABC RESULTS:              NAND cells:       24
ABC RESULTS:               NOR cells:       82
ABC RESULTS:               NOT cells:       56
ABC RESULTS:              OAI3 cells:       16
ABC RESULTS:                OR cells:       24
ABC RESULTS:              XNOR cells:       63
ABC RESULTS:               XOR cells:      210
ABC RESULTS:        internal signals:      915
ABC RESULTS:           input signals:      150
ABC RESULTS:          output signals:       85
Removing temp directory.

yosys> opt -fast

2.21. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3319' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3315' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3310' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3306' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3293' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3206' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3109' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$3017' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2930' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2860' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2792' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2732' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2679' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2632' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2594' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2561' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2514' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2497$auto$blifparse.cc:286:parse_blif$2510' in module `IIR_Filter'.

yosys> opt_merge

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused non-port wire \samplevalue.
  removed 1 unused temporary wires.

2.21.5. Finished fast OPT passes.

yosys> hierarchy -check

2.22. Executing HIERARCHY pass (managing design hierarchy).

2.22.1. Analyzing design hierarchy..
Top module:  \IIR_Filter

2.22.2. Analyzing design hierarchy..
Top module:  \IIR_Filter
Removed 0 unused modules.

yosys> stat

2.23. Printing statistics.

=== IIR_Filter ===

   Number of wires:                896
   Number of wire bits:           1171
   Number of public wires:          17
   Number of public wire bits:     215
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1040
     $_AND_                        297
     $_AOI3_                        70
     $_DFF_P_                       68
     $_DLATCH_P_                    16
     $_MUX_                        114
     $_NAND_                        24
     $_NOR_                         82
     $_NOT_                         56
     $_OAI3_                        16
     $_OR_                          24
     $_XNOR_                        63
     $_XOR_                        210


yosys> check

2.24. Executing CHECK pass (checking for obvious problems).
checking module IIR_Filter..
found and reported 0 problems.

yosys> opt

3. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

3.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

3.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

3.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

3.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).

3.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt_clean -purge

4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused non-port wire \Yt.
  removed 1 unused temporary wires.

yosys> dfflibmap -liberty /home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib

5. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_1 (noninv, pins=3, area=20.02) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtn_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_NN0_.
  cell sky130_fd_sc_hd__dfrtp_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_NNN_.
  cell sky130_fd_sc_hd__dfbbp_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFF_NN0_.
  create mapping for $_DFF_PP0_ from mapping for $_DFF_PN0_.
  create mapping for $_DFF_PP1_ from mapping for $_DFF_PN1_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFF_NN1_ from mapping for $_DFF_NN0_.
  create mapping for $_DFF_NP1_ from mapping for $_DFF_NN1_.
  create mapping for $_DFF_N_ from mapping for $_DFF_P_.
  final dff cell mappings:
    sky130_fd_sc_hd__dfxtp_1 _DFF_N_ (.CLK(~C), .D( D), .Q( Q));
    sky130_fd_sc_hd__dfxtp_1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NN0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B( R));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NN1_ (.CLK_N( C), .D(~D), .Q(~Q), .RESET_B( R));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NP0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B(~R));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NP1_ (.CLK_N( C), .D(~D), .Q(~Q), .RESET_B(~R));
    sky130_fd_sc_hd__dfrtp_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    sky130_fd_sc_hd__dfrtp_1 _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .RESET_B(~R));
    sky130_fd_sc_hd__dfstp_2 _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .SET_B(~R));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNP_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B( S));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NPN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B(~S));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NPP_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B(~S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B( S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B(~S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B(~S));
Mapping DFF cells in module `\IIR_Filter':
  mapped 68 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.

yosys> abc -liberty /home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\IIR_Filter' to `<abc-temp-dir>/input.blif'..
Extracted 956 gates and 1106 wires to a netlist network with 150 inputs and 85 outputs.

6.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.08 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + dc2 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -o 
ABC: + strash 
ABC: + dch -f 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:      120
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a32o_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      132
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso0p_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__maj3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:       33
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:      327
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:      163
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       51
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:      118
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:      116
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_1 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__xnor3_4 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__xor3_4 cells:        3
ABC RESULTS:        internal signals:      871
ABC RESULTS:           input signals:      150
ABC RESULTS:          output signals:       85
Removing temp directory.

yosys> insbuf -buf sky130_fd_sc_hd__buf_2 A X

7. Executing INSBUF pass (insert buffer cells for connected wires).
Added IIR_Filter.$auto$insbuf.cc:79:execute$4781: 1'0 -> \Y [16]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4782: 1'0 -> \Y [17]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4783: 1'0 -> \Y [18]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4784: 1'0 -> \Y [19]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4785: 1'0 -> \Y [20]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4786: 1'0 -> \Y [21]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4787: 1'0 -> \Y [22]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4788: 1'0 -> \Y [23]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4789: 1'0 -> \Y [24]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4790: 1'0 -> \Y [25]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4791: 1'0 -> \Y [26]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4792: 1'0 -> \Y [27]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4793: 1'0 -> \Y [28]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4794: 1'0 -> \Y [29]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4795: 1'0 -> \Y [30]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4796: 1'0 -> \Y [31]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4797: \cycle_valid -> $abc$3454$n0
Added IIR_Filter.$auto$insbuf.cc:79:execute$4798: \phase [1] -> $abc$3454$n2
Added IIR_Filter.$auto$insbuf.cc:79:execute$4799: \phase [0] -> $abc$3454$n4
Added IIR_Filter.$auto$insbuf.cc:79:execute$4800: \phase [2] -> $abc$3454$n6
Added IIR_Filter.$auto$insbuf.cc:79:execute$4801: \rst -> $abc$3454$n10
Added IIR_Filter.$auto$insbuf.cc:79:execute$4802: $abc$3454$n11 -> $0\cycle_valid[0:0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4803: $abc$3454$n14 -> $0\phase[2:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4804: $abc$3454$n18 -> $0\phase[2:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4805: $abc$3454$n22 -> $0\phase[2:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4806: \result [0] -> $abc$3454$n23
Added IIR_Filter.$auto$insbuf.cc:79:execute$4807: \Y2 [4] -> $abc$3454$n27
Added IIR_Filter.$auto$insbuf.cc:79:execute$4808: \coeff [0] -> $abc$3454$n29
Added IIR_Filter.$auto$insbuf.cc:79:execute$4809: \Y2 [3] -> $abc$3454$n31
Added IIR_Filter.$auto$insbuf.cc:79:execute$4810: \coeff [1] -> $abc$3454$n33
Added IIR_Filter.$auto$insbuf.cc:79:execute$4811: \Y2 [2] -> $abc$3454$n36
Added IIR_Filter.$auto$insbuf.cc:79:execute$4812: \coeff [2] -> $abc$3454$n38
Added IIR_Filter.$auto$insbuf.cc:79:execute$4813: \Y2 [1] -> $abc$3454$n44
Added IIR_Filter.$auto$insbuf.cc:79:execute$4814: \coeff [3] -> $abc$3454$n50
Added IIR_Filter.$auto$insbuf.cc:79:execute$4815: \Y2 [0] -> $abc$3454$n52
Added IIR_Filter.$auto$insbuf.cc:79:execute$4816: \coeff [4] -> $abc$3454$n54
Added IIR_Filter.$auto$insbuf.cc:79:execute$4817: $abc$3454$n81 -> $0\result[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4818: \result [1] -> $abc$3454$n82
Added IIR_Filter.$auto$insbuf.cc:79:execute$4819: \Y2 [5] -> $abc$3454$n84
Added IIR_Filter.$auto$insbuf.cc:79:execute$4820: \coeff [5] -> $abc$3454$n97
Added IIR_Filter.$auto$insbuf.cc:79:execute$4821: $abc$3454$n116 -> $0\result[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4822: \Y2 [6] -> $abc$3454$n117
Added IIR_Filter.$auto$insbuf.cc:79:execute$4823: \coeff [6] -> $abc$3454$n139
Added IIR_Filter.$auto$insbuf.cc:79:execute$4824: \result [2] -> $abc$3454$n151
Added IIR_Filter.$auto$insbuf.cc:79:execute$4825: $abc$3454$n157 -> $0\result[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4826: \result [3] -> $abc$3454$n158
Added IIR_Filter.$auto$insbuf.cc:79:execute$4827: \Y2 [7] -> $abc$3454$n160
Added IIR_Filter.$auto$insbuf.cc:79:execute$4828: \coeff [7] -> $abc$3454$n183
Added IIR_Filter.$auto$insbuf.cc:79:execute$4829: $abc$3454$n207 -> $0\result[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4830: \Y2 [8] -> $abc$3454$n208
Added IIR_Filter.$auto$insbuf.cc:79:execute$4831: \coeff [8] -> $abc$3454$n233
Added IIR_Filter.$auto$insbuf.cc:79:execute$4832: \result [4] -> $abc$3454$n254
Added IIR_Filter.$auto$insbuf.cc:79:execute$4833: $abc$3454$n263 -> $0\result[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4834: \result [5] -> $abc$3454$n264
Added IIR_Filter.$auto$insbuf.cc:79:execute$4835: \Y2 [9] -> $abc$3454$n266
Added IIR_Filter.$auto$insbuf.cc:79:execute$4836: \coeff [9] -> $abc$3454$n305
Added IIR_Filter.$auto$insbuf.cc:79:execute$4837: $abc$3454$n326 -> $0\result[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4838: \Y2 [10] -> $abc$3454$n327
Added IIR_Filter.$auto$insbuf.cc:79:execute$4839: \coeff [10] -> $abc$3454$n367
Added IIR_Filter.$auto$insbuf.cc:79:execute$4840: \result [6] -> $abc$3454$n387
Added IIR_Filter.$auto$insbuf.cc:79:execute$4841: $abc$3454$n397 -> $0\result[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4842: \result [7] -> $abc$3454$n398
Added IIR_Filter.$auto$insbuf.cc:79:execute$4843: \Y2 [11] -> $abc$3454$n400
Added IIR_Filter.$auto$insbuf.cc:79:execute$4844: \coeff [11] -> $abc$3454$n442
Added IIR_Filter.$auto$insbuf.cc:79:execute$4845: $abc$3454$n470 -> $0\result[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4846: \result [8] -> $abc$3454$n471
Added IIR_Filter.$auto$insbuf.cc:79:execute$4847: \Y2 [12] -> $abc$3454$n473
Added IIR_Filter.$auto$insbuf.cc:79:execute$4848: \coeff [12] -> $abc$3454$n523
Added IIR_Filter.$auto$insbuf.cc:79:execute$4849: $abc$3454$n560 -> $0\result[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4850: \result [9] -> $abc$3454$n561
Added IIR_Filter.$auto$insbuf.cc:79:execute$4851: \Y2 [13] -> $abc$3454$n563
Added IIR_Filter.$auto$insbuf.cc:79:execute$4852: \coeff [13] -> $abc$3454$n623
Added IIR_Filter.$auto$insbuf.cc:79:execute$4853: $abc$3454$n655 -> $0\result[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4854: \result [10] -> $abc$3454$n656
Added IIR_Filter.$auto$insbuf.cc:79:execute$4855: \Y2 [14] -> $abc$3454$n658
Added IIR_Filter.$auto$insbuf.cc:79:execute$4856: \coeff [14] -> $abc$3454$n716
Added IIR_Filter.$auto$insbuf.cc:79:execute$4857: $abc$3454$n755 -> $0\result[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4858: \Y2 [15] -> $abc$3454$n756
Added IIR_Filter.$auto$insbuf.cc:79:execute$4859: \coeff [15] -> $abc$3454$n824
Added IIR_Filter.$auto$insbuf.cc:79:execute$4860: \result [11] -> $abc$3454$n838
Added IIR_Filter.$auto$insbuf.cc:79:execute$4861: $abc$3454$n845 -> $0\result[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4862: \result [12] -> $abc$3454$n856
Added IIR_Filter.$auto$insbuf.cc:79:execute$4863: $abc$3454$n859 -> $0\result[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4864: \result [13] -> $abc$3454$n861
Added IIR_Filter.$auto$insbuf.cc:79:execute$4865: $abc$3454$n864 -> $0\result[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4866: \result [14] -> $abc$3454$n867
Added IIR_Filter.$auto$insbuf.cc:79:execute$4867: $abc$3454$n870 -> $0\result[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4868: \result [15] -> $abc$3454$n872
Added IIR_Filter.$auto$insbuf.cc:79:execute$4869: $abc$3454$n875 -> $0\result[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4870: \Y [0] -> $abc$3454$n877
Added IIR_Filter.$auto$insbuf.cc:79:execute$4871: $abc$3454$n878 -> $0\Yt[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4872: \Y [1] -> $abc$3454$n879
Added IIR_Filter.$auto$insbuf.cc:79:execute$4873: $abc$3454$n880 -> $0\Yt[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4874: \Y [2] -> $abc$3454$n881
Added IIR_Filter.$auto$insbuf.cc:79:execute$4875: $abc$3454$n882 -> $0\Yt[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4876: \Y [3] -> $abc$3454$n883
Added IIR_Filter.$auto$insbuf.cc:79:execute$4877: $abc$3454$n884 -> $0\Yt[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4878: \Y [4] -> $abc$3454$n885
Added IIR_Filter.$auto$insbuf.cc:79:execute$4879: $abc$3454$n886 -> $0\Yt[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4880: \Y [5] -> $abc$3454$n887
Added IIR_Filter.$auto$insbuf.cc:79:execute$4881: $abc$3454$n888 -> $0\Yt[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4882: \Y [6] -> $abc$3454$n889
Added IIR_Filter.$auto$insbuf.cc:79:execute$4883: $abc$3454$n890 -> $0\Yt[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4884: \Y [7] -> $abc$3454$n891
Added IIR_Filter.$auto$insbuf.cc:79:execute$4885: $abc$3454$n892 -> $0\Yt[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4886: \Y [8] -> $abc$3454$n893
Added IIR_Filter.$auto$insbuf.cc:79:execute$4887: $abc$3454$n894 -> $0\Yt[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4888: \Y [9] -> $abc$3454$n895
Added IIR_Filter.$auto$insbuf.cc:79:execute$4889: $abc$3454$n896 -> $0\Yt[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4890: \Y [10] -> $abc$3454$n897
Added IIR_Filter.$auto$insbuf.cc:79:execute$4891: $abc$3454$n898 -> $0\Yt[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4892: \Y [11] -> $abc$3454$n899
Added IIR_Filter.$auto$insbuf.cc:79:execute$4893: $abc$3454$n900 -> $0\Yt[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4894: \Y [12] -> $abc$3454$n901
Added IIR_Filter.$auto$insbuf.cc:79:execute$4895: $abc$3454$n902 -> $0\Yt[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4896: \Y [13] -> $abc$3454$n903
Added IIR_Filter.$auto$insbuf.cc:79:execute$4897: $abc$3454$n904 -> $0\Yt[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4898: \Y [14] -> $abc$3454$n905
Added IIR_Filter.$auto$insbuf.cc:79:execute$4899: $abc$3454$n906 -> $0\Yt[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4900: \Y [15] -> $abc$3454$n907
Added IIR_Filter.$auto$insbuf.cc:79:execute$4901: $abc$3454$n908 -> $0\Yt[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4902: \Y1 [0] -> $abc$3454$n909
Added IIR_Filter.$auto$insbuf.cc:79:execute$4903: \en -> $abc$3454$n910
Added IIR_Filter.$auto$insbuf.cc:79:execute$4904: $abc$3454$n912 -> $0\Y2[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4905: \Y1 [1] -> $abc$3454$n913
Added IIR_Filter.$auto$insbuf.cc:79:execute$4906: $abc$3454$n915 -> $0\Y2[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4907: \Y1 [2] -> $abc$3454$n916
Added IIR_Filter.$auto$insbuf.cc:79:execute$4908: $abc$3454$n918 -> $0\Y2[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4909: \Y1 [3] -> $abc$3454$n919
Added IIR_Filter.$auto$insbuf.cc:79:execute$4910: $abc$3454$n921 -> $0\Y2[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4911: \Y1 [4] -> $abc$3454$n922
Added IIR_Filter.$auto$insbuf.cc:79:execute$4912: $abc$3454$n924 -> $0\Y2[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4913: \Y1 [5] -> $abc$3454$n925
Added IIR_Filter.$auto$insbuf.cc:79:execute$4914: $abc$3454$n927 -> $0\Y2[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4915: \Y1 [6] -> $abc$3454$n928
Added IIR_Filter.$auto$insbuf.cc:79:execute$4916: $abc$3454$n930 -> $0\Y2[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4917: \Y1 [7] -> $abc$3454$n931
Added IIR_Filter.$auto$insbuf.cc:79:execute$4918: $abc$3454$n933 -> $0\Y2[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4919: \Y1 [8] -> $abc$3454$n934
Added IIR_Filter.$auto$insbuf.cc:79:execute$4920: $abc$3454$n936 -> $0\Y2[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4921: \Y1 [9] -> $abc$3454$n937
Added IIR_Filter.$auto$insbuf.cc:79:execute$4922: $abc$3454$n939 -> $0\Y2[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4923: \Y1 [10] -> $abc$3454$n940
Added IIR_Filter.$auto$insbuf.cc:79:execute$4924: $abc$3454$n942 -> $0\Y2[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4925: \Y1 [11] -> $abc$3454$n943
Added IIR_Filter.$auto$insbuf.cc:79:execute$4926: $abc$3454$n945 -> $0\Y2[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4927: \Y1 [12] -> $abc$3454$n946
Added IIR_Filter.$auto$insbuf.cc:79:execute$4928: $abc$3454$n948 -> $0\Y2[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4929: \Y1 [13] -> $abc$3454$n949
Added IIR_Filter.$auto$insbuf.cc:79:execute$4930: $abc$3454$n951 -> $0\Y2[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4931: \Y1 [14] -> $abc$3454$n952
Added IIR_Filter.$auto$insbuf.cc:79:execute$4932: $abc$3454$n954 -> $0\Y2[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4933: \Y1 [15] -> $abc$3454$n955
Added IIR_Filter.$auto$insbuf.cc:79:execute$4934: $abc$3454$n957 -> $0\Y2[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4935: $abc$3454$n959 -> $0\Y1[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4936: $abc$3454$n961 -> $0\Y1[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4937: $abc$3454$n963 -> $0\Y1[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4938: $abc$3454$n965 -> $0\Y1[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4939: $abc$3454$n967 -> $0\Y1[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4940: $abc$3454$n969 -> $0\Y1[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4941: $abc$3454$n971 -> $0\Y1[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4942: $abc$3454$n973 -> $0\Y1[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4943: $abc$3454$n975 -> $0\Y1[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4944: $abc$3454$n977 -> $0\Y1[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4945: $abc$3454$n979 -> $0\Y1[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4946: $abc$3454$n981 -> $0\Y1[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4947: $abc$3454$n983 -> $0\Y1[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4948: $abc$3454$n985 -> $0\Y1[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4949: $abc$3454$n987 -> $0\Y1[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4950: $abc$3454$n989 -> $0\Y1[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4951: \a0 [0] -> $abc$3454$n993
Added IIR_Filter.$auto$insbuf.cc:79:execute$4952: \a1 [0] -> $abc$3454$n994
Added IIR_Filter.$auto$insbuf.cc:79:execute$4953: \a2 [0] -> $abc$3454$n996
Added IIR_Filter.$auto$insbuf.cc:79:execute$4954: \b2 [0] -> $abc$3454$n998
Added IIR_Filter.$auto$insbuf.cc:79:execute$4955: $abc$3454$n999 -> $0\coeff[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4956: \a0 [1] -> $abc$3454$n1000
Added IIR_Filter.$auto$insbuf.cc:79:execute$4957: \a1 [1] -> $abc$3454$n1001
Added IIR_Filter.$auto$insbuf.cc:79:execute$4958: \a2 [1] -> $abc$3454$n1003
Added IIR_Filter.$auto$insbuf.cc:79:execute$4959: \b2 [1] -> $abc$3454$n1005
Added IIR_Filter.$auto$insbuf.cc:79:execute$4960: $abc$3454$n1006 -> $0\coeff[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4961: \a0 [2] -> $abc$3454$n1007
Added IIR_Filter.$auto$insbuf.cc:79:execute$4962: \a1 [2] -> $abc$3454$n1008
Added IIR_Filter.$auto$insbuf.cc:79:execute$4963: \a2 [2] -> $abc$3454$n1010
Added IIR_Filter.$auto$insbuf.cc:79:execute$4964: \b2 [2] -> $abc$3454$n1012
Added IIR_Filter.$auto$insbuf.cc:79:execute$4965: $abc$3454$n1013 -> $0\coeff[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4966: \a0 [3] -> $abc$3454$n1014
Added IIR_Filter.$auto$insbuf.cc:79:execute$4967: \a1 [3] -> $abc$3454$n1015
Added IIR_Filter.$auto$insbuf.cc:79:execute$4968: \a2 [3] -> $abc$3454$n1017
Added IIR_Filter.$auto$insbuf.cc:79:execute$4969: \b2 [3] -> $abc$3454$n1019
Added IIR_Filter.$auto$insbuf.cc:79:execute$4970: $abc$3454$n1020 -> $0\coeff[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4971: \a0 [4] -> $abc$3454$n1021
Added IIR_Filter.$auto$insbuf.cc:79:execute$4972: \a1 [4] -> $abc$3454$n1022
Added IIR_Filter.$auto$insbuf.cc:79:execute$4973: \a2 [4] -> $abc$3454$n1024
Added IIR_Filter.$auto$insbuf.cc:79:execute$4974: \b2 [4] -> $abc$3454$n1026
Added IIR_Filter.$auto$insbuf.cc:79:execute$4975: $abc$3454$n1027 -> $0\coeff[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4976: \a0 [5] -> $abc$3454$n1028
Added IIR_Filter.$auto$insbuf.cc:79:execute$4977: \a1 [5] -> $abc$3454$n1029
Added IIR_Filter.$auto$insbuf.cc:79:execute$4978: \a2 [5] -> $abc$3454$n1031
Added IIR_Filter.$auto$insbuf.cc:79:execute$4979: \b2 [5] -> $abc$3454$n1033
Added IIR_Filter.$auto$insbuf.cc:79:execute$4980: $abc$3454$n1034 -> $0\coeff[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4981: \a0 [6] -> $abc$3454$n1035
Added IIR_Filter.$auto$insbuf.cc:79:execute$4982: \a1 [6] -> $abc$3454$n1036
Added IIR_Filter.$auto$insbuf.cc:79:execute$4983: \a2 [6] -> $abc$3454$n1038
Added IIR_Filter.$auto$insbuf.cc:79:execute$4984: \b2 [6] -> $abc$3454$n1040
Added IIR_Filter.$auto$insbuf.cc:79:execute$4985: $abc$3454$n1041 -> $0\coeff[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4986: \a0 [7] -> $abc$3454$n1042
Added IIR_Filter.$auto$insbuf.cc:79:execute$4987: \a1 [7] -> $abc$3454$n1043
Added IIR_Filter.$auto$insbuf.cc:79:execute$4988: \a2 [7] -> $abc$3454$n1045
Added IIR_Filter.$auto$insbuf.cc:79:execute$4989: \b2 [7] -> $abc$3454$n1047
Added IIR_Filter.$auto$insbuf.cc:79:execute$4990: $abc$3454$n1048 -> $0\coeff[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4991: \a0 [8] -> $abc$3454$n1049
Added IIR_Filter.$auto$insbuf.cc:79:execute$4992: \a1 [8] -> $abc$3454$n1050
Added IIR_Filter.$auto$insbuf.cc:79:execute$4993: \a2 [8] -> $abc$3454$n1052
Added IIR_Filter.$auto$insbuf.cc:79:execute$4994: \b2 [8] -> $abc$3454$n1054
Added IIR_Filter.$auto$insbuf.cc:79:execute$4995: $abc$3454$n1055 -> $0\coeff[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$4996: \a0 [9] -> $abc$3454$n1056
Added IIR_Filter.$auto$insbuf.cc:79:execute$4997: \a1 [9] -> $abc$3454$n1057
Added IIR_Filter.$auto$insbuf.cc:79:execute$4998: \a2 [9] -> $abc$3454$n1059
Added IIR_Filter.$auto$insbuf.cc:79:execute$4999: \b2 [9] -> $abc$3454$n1061
Added IIR_Filter.$auto$insbuf.cc:79:execute$5000: $abc$3454$n1062 -> $0\coeff[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5001: \a0 [10] -> $abc$3454$n1063
Added IIR_Filter.$auto$insbuf.cc:79:execute$5002: \a1 [10] -> $abc$3454$n1064
Added IIR_Filter.$auto$insbuf.cc:79:execute$5003: \a2 [10] -> $abc$3454$n1066
Added IIR_Filter.$auto$insbuf.cc:79:execute$5004: \b2 [10] -> $abc$3454$n1068
Added IIR_Filter.$auto$insbuf.cc:79:execute$5005: $abc$3454$n1069 -> $0\coeff[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5006: \a0 [11] -> $abc$3454$n1070
Added IIR_Filter.$auto$insbuf.cc:79:execute$5007: \a1 [11] -> $abc$3454$n1071
Added IIR_Filter.$auto$insbuf.cc:79:execute$5008: \a2 [11] -> $abc$3454$n1073
Added IIR_Filter.$auto$insbuf.cc:79:execute$5009: \b2 [11] -> $abc$3454$n1075
Added IIR_Filter.$auto$insbuf.cc:79:execute$5010: $abc$3454$n1076 -> $0\coeff[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5011: \a0 [12] -> $abc$3454$n1077
Added IIR_Filter.$auto$insbuf.cc:79:execute$5012: \a1 [12] -> $abc$3454$n1078
Added IIR_Filter.$auto$insbuf.cc:79:execute$5013: \a2 [12] -> $abc$3454$n1080
Added IIR_Filter.$auto$insbuf.cc:79:execute$5014: \b2 [12] -> $abc$3454$n1082
Added IIR_Filter.$auto$insbuf.cc:79:execute$5015: $abc$3454$n1083 -> $0\coeff[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5016: \a0 [13] -> $abc$3454$n1084
Added IIR_Filter.$auto$insbuf.cc:79:execute$5017: \a1 [13] -> $abc$3454$n1085
Added IIR_Filter.$auto$insbuf.cc:79:execute$5018: \a2 [13] -> $abc$3454$n1087
Added IIR_Filter.$auto$insbuf.cc:79:execute$5019: \b2 [13] -> $abc$3454$n1089
Added IIR_Filter.$auto$insbuf.cc:79:execute$5020: $abc$3454$n1090 -> $0\coeff[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5021: \a0 [14] -> $abc$3454$n1091
Added IIR_Filter.$auto$insbuf.cc:79:execute$5022: \a1 [14] -> $abc$3454$n1092
Added IIR_Filter.$auto$insbuf.cc:79:execute$5023: \a2 [14] -> $abc$3454$n1094
Added IIR_Filter.$auto$insbuf.cc:79:execute$5024: \b2 [14] -> $abc$3454$n1096
Added IIR_Filter.$auto$insbuf.cc:79:execute$5025: $abc$3454$n1097 -> $0\coeff[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5026: \a0 [15] -> $abc$3454$n1098
Added IIR_Filter.$auto$insbuf.cc:79:execute$5027: \a1 [15] -> $abc$3454$n1099
Added IIR_Filter.$auto$insbuf.cc:79:execute$5028: \a2 [15] -> $abc$3454$n1101
Added IIR_Filter.$auto$insbuf.cc:79:execute$5029: \b2 [15] -> $abc$3454$n1103
Added IIR_Filter.$auto$insbuf.cc:79:execute$5030: $abc$3454$n1104 -> $0\coeff[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5031: $abc$3454$n1105 -> $abc$2497$n368

yosys> stat

8. Printing statistics.

=== IIR_Filter ===

   Number of wires:               2371
   Number of wire bits:           2631
   Number of public wires:          16
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1661
     $_DLATCH_P_                    16
     sky130_fd_sc_hd__a211oi_1       5
     sky130_fd_sc_hd__a21boi_0       4
     sky130_fd_sc_hd__a21o_2        10
     sky130_fd_sc_hd__a21oi_1      120
     sky130_fd_sc_hd__a22o_2         1
     sky130_fd_sc_hd__a22oi_1        3
     sky130_fd_sc_hd__a31oi_1        3
     sky130_fd_sc_hd__a32o_1         4
     sky130_fd_sc_hd__and2_2         4
     sky130_fd_sc_hd__and3_2        25
     sky130_fd_sc_hd__buf_2        251
     sky130_fd_sc_hd__clkinv_1     132
     sky130_fd_sc_hd__dfxtp_1       68
     sky130_fd_sc_hd__lpflow_inputiso0p_1      1
     sky130_fd_sc_hd__maj3_1         1
     sky130_fd_sc_hd__mux2i_1       33
     sky130_fd_sc_hd__nand2_1      327
     sky130_fd_sc_hd__nand3_1      163
     sky130_fd_sc_hd__nand3b_1      14
     sky130_fd_sc_hd__nand4_1       51
     sky130_fd_sc_hd__nor2_1       118
     sky130_fd_sc_hd__nor3_1        22
     sky130_fd_sc_hd__nor3b_1        5
     sky130_fd_sc_hd__nor4_1         7
     sky130_fd_sc_hd__o2111ai_1      7
     sky130_fd_sc_hd__o211a_1        2
     sky130_fd_sc_hd__o211ai_1       7
     sky130_fd_sc_hd__o21a_1        19
     sky130_fd_sc_hd__o21ai_0      116
     sky130_fd_sc_hd__o21bai_1      19
     sky130_fd_sc_hd__o221ai_1       1
     sky130_fd_sc_hd__o22ai_1       24
     sky130_fd_sc_hd__o2bb2ai_1     13
     sky130_fd_sc_hd__o31ai_1        3
     sky130_fd_sc_hd__or2_2          8
     sky130_fd_sc_hd__xnor2_1       14
     sky130_fd_sc_hd__xnor3_4       13
     sky130_fd_sc_hd__xor2_1        24
     sky130_fd_sc_hd__xor3_4         3


yosys> write_verilog ./results/IIR_Filter.synth.v

9. Executing Verilog backend.
Dumping module `\IIR_Filter'.

End of script. Logfile hash: 3bab7a0aef
CPU: user 0.56s system 0.01s, MEM: 197.27 MB total, 39.67 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 24% 1x dfflibmap (0 sec), 13% 16x opt_expr (0 sec), ...
