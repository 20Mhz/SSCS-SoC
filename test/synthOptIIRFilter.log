
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
echo on

yosys> read_verilog optIIR_Filter.v

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `optIIR_Filter.v' to AST representation.
Generating RTLIL representation for module `\IIR_Filter'.
Note: Assuming pure combinatorial block at optIIR_Filter.v:32 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

yosys> synth -top IIR_Filter

2. Executing SYNTH pass.

yosys> hierarchy -check -top IIR_Filter

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \IIR_Filter

2.1.2. Analyzing design hierarchy..
Top module:  \IIR_Filter
Removed 0 unused modules.

yosys> proc

2.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_init

2.2.3. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:106$20'.
     1/1: $0\cycle_valid[0:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:96$17'.
     1/1: $0\phase[2:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:82$11'.
     1/1: $0\result[15:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
     1/6: $0\Yt[15:0]
     2/6: $0\Y2[15:0]
     3/6: $0\Y1[15:0]
     4/6: $0\X3[15:0]
     5/6: $0\X2[15:0]
     6/6: $0\X1[15:0]
Creating decoders for process `\IIR_Filter.$proc$optIIR_Filter.v:32$1'.
     1/2: $0\samplevalue[15:0]
     2/2: $0\coeff[15:0]

yosys> proc_dlatch

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\IIR_Filter.\samplevalue' from process `\IIR_Filter.$proc$optIIR_Filter.v:32$1'.
Latch inferred for signal `\IIR_Filter.\coeff' from process `\IIR_Filter.$proc$optIIR_Filter.v:32$1': $auto$proc_dlatch.cc:408:proc_dlatch$156

yosys> proc_dff

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\IIR_Filter.\cycle_valid' using process `\IIR_Filter.$proc$optIIR_Filter.v:106$20'.
  created $dff cell `$procdff$157' with positive edge clock.
Creating register for signal `\IIR_Filter.\phase' using process `\IIR_Filter.$proc$optIIR_Filter.v:96$17'.
  created $dff cell `$procdff$158' with positive edge clock.
Creating register for signal `\IIR_Filter.\result' using process `\IIR_Filter.$proc$optIIR_Filter.v:82$11'.
  created $dff cell `$procdff$159' with positive edge clock.
Creating register for signal `\IIR_Filter.\X1' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$160' with positive edge clock.
Creating register for signal `\IIR_Filter.\X2' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$161' with positive edge clock.
Creating register for signal `\IIR_Filter.\X3' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$162' with positive edge clock.
Creating register for signal `\IIR_Filter.\Y1' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$163' with positive edge clock.
Creating register for signal `\IIR_Filter.\Y2' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$164' with positive edge clock.
Creating register for signal `\IIR_Filter.\Yt' using process `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
  created $dff cell `$procdff$165' with positive edge clock.

yosys> proc_clean

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:106$20'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:106$20'.
Found and cleaned up 2 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:96$17'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:96$17'.
Found and cleaned up 3 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:82$11'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:82$11'.
Found and cleaned up 3 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:60$7'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:60$7'.
Found and cleaned up 5 empty switches in `\IIR_Filter.$proc$optIIR_Filter.v:32$1'.
Removing empty process `IIR_Filter.$proc$optIIR_Filter.v:32$1'.
Cleaned up 16 empty switches.

yosys> opt_expr

2.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$eq$optIIR_Filter.v:34$2' in module `IIR_Filter' with $logic_not.
Replacing $eq cell `$eq$optIIR_Filter.v:61$8' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:61$8_Y = \rst'.
Replacing $eq cell `$eq$optIIR_Filter.v:70$9' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:70$9_Y = \en'.
Replacing $eq cell `$eq$optIIR_Filter.v:83$12' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:83$12_Y = \rst'.
Replacing $shr cell `$shr$optIIR_Filter.v:89$14' (B=4, SHR=4) in module `IIR_Filter' with fixed wiring: { 4'0000 $mul$optIIR_Filter.v:89$13_Y [15:4] }
Replacing $eq cell `$eq$optIIR_Filter.v:97$18' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:97$18_Y = \rst'.
Replacing $eq cell `$eq$optIIR_Filter.v:107$21' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:107$21_Y = \rst'.
Replacing $eq cell `$eq$optIIR_Filter.v:109$22' (1) in module `\IIR_Filter' with constant driver `$eq$optIIR_Filter.v:109$22_Y = \en'.
Replacing $mux cell `$procmux$100' (?) in module `\IIR_Filter' with constant driver `$procmux$100_Y = \b2'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$124' (const_or) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$125 = 1'1'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$128' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$129 = $auto$rtlil.cc:1629:And$127'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$130' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$131 = $auto$rtlil.cc:1604:ReduceOr$129'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$134' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$135 = $auto$rtlil.cc:1629:And$133'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$136' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$137 = $auto$rtlil.cc:1604:ReduceOr$135'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$140' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$141 = $auto$rtlil.cc:1629:And$139'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$142' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$143 = $auto$rtlil.cc:1604:ReduceOr$141'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$146' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$147 = $auto$rtlil.cc:1629:And$145'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$148' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$149 = $auto$rtlil.cc:1604:ReduceOr$147'.
Replacing $reduce_or cell `$auto$proc_dlatch.cc:247:make_hold$152' (unary_buffer) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$153 = $auto$rtlil.cc:1629:And$151'.

yosys> opt_clean

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> check

2.5. Executing CHECK pass (checking for obvious problems).
checking module IIR_Filter..
found and reported 0 problems.

yosys> opt

2.6. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.6.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$52 (pure)
    Root of a mux tree: $procmux$58 (pure)
    Root of a mux tree: $procmux$64 (pure)
    Root of a mux tree: $procmux$70 (pure)
    Root of a mux tree: $procmux$76 (pure)
    Root of a mux tree: $procmux$82 (pure)
    Root of a mux tree: $procmux$97 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

yosys> opt_reduce

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

2.6.8. Executing OPT_EXPR pass (perform const folding).

2.6.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell IIR_Filter.$eq$optIIR_Filter.v:38$3 ($eq).
Removed top 1 bits (of 3) from port B of cell IIR_Filter.$eq$optIIR_Filter.v:42$4 ($eq).
Removed top 1 bits (of 3) from port B of cell IIR_Filter.$eq$optIIR_Filter.v:46$5 ($eq).
Removed top 4 bits (of 16) from port B of cell IIR_Filter.$add$optIIR_Filter.v:89$15 ($add).
Removed top 31 bits (of 32) from port B of cell IIR_Filter.$add$optIIR_Filter.v:102$19 ($add).
Removed top 29 bits (of 32) from port Y of cell IIR_Filter.$add$optIIR_Filter.v:102$19 ($add).
Removed top 29 bits (of 32) from wire IIR_Filter.$add$optIIR_Filter.v:102$19_Y.

yosys> alumacc

2.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module IIR_Filter:
  creating $macc model for $add$optIIR_Filter.v:102$19 ($add).
  creating $macc model for $add$optIIR_Filter.v:89$15 ($add).
  creating $macc model for $mul$optIIR_Filter.v:89$13 ($mul).
  creating $alu model for $macc $add$optIIR_Filter.v:89$15.
  creating $alu model for $macc $add$optIIR_Filter.v:102$19.
  creating $macc cell for $mul$optIIR_Filter.v:89$13: $auto$alumacc.cc:354:replace_macc$167
  creating $alu cell for $add$optIIR_Filter.v:102$19: $auto$alumacc.cc:470:replace_alu$168
  creating $alu cell for $add$optIIR_Filter.v:89$15: $auto$alumacc.cc:470:replace_alu$171
  created 2 $alu and 1 $macc cells.

yosys> share

2.9. Executing SHARE pass (SAT-based resource sharing).

yosys> opt

2.10. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.10.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$52 (pure)
    Root of a mux tree: $procmux$58 (pure)
    Root of a mux tree: $procmux$64 (pure)
    Root of a mux tree: $procmux$70 (pure)
    Root of a mux tree: $procmux$76 (pure)
    Root of a mux tree: $procmux$82 (pure)
    Root of a mux tree: $procmux$97 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

yosys> opt_reduce

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

2.10.8. Executing OPT_EXPR pass (perform const folding).

2.10.9. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

2.11. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> fsm_opt

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -fast

2.12. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.12.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

2.12.5. Finished fast OPT passes.

yosys> memory -nomap

2.13. Executing MEMORY pass.

yosys> memory_dff

2.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

yosys> opt_clean

2.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> memory_share

2.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_clean

2.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> memory_collect

2.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

2.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt -fast -full

2.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

2.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$28' in module `IIR_Filter' with or-gate.

yosys> opt_merge

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

2.15.5. Finished fast OPT passes.

yosys> memory_map

2.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

yosys> opt -full

2.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

2.17.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

2.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

2.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$25 (pure)
    Root of a mux tree: $procmux$31 (pure)
    Root of a mux tree: $procmux$37 (pure)
    Root of a mux tree: $procmux$46 (pure)
    Root of a mux tree: $procmux$52 (pure)
    Root of a mux tree: $procmux$58 (pure)
    Root of a mux tree: $procmux$64 (pure)
    Root of a mux tree: $procmux$70 (pure)
    Root of a mux tree: $procmux$76 (pure)
    Root of a mux tree: $procmux$82 (pure)
    Root of a mux tree: $procmux$97 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

2.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

2.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr -full

2.17.8. Executing OPT_EXPR pass (perform const folding).

2.17.9. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping IIR_Filter.$auto$alumacc.cc:354:replace_macc$167 ($macc) with maccmap.
  add \samplevalue * \coeff (16x16 bits, unsigned)
Mapping IIR_Filter.$eq$optIIR_Filter.v:34$2 ($logic_not) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:38$3 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:42$4 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:46$5 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:50$6 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:78$10 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:90$16 ($eq) with simplemap.
Mapping IIR_Filter.$eq$optIIR_Filter.v:111$23 ($eq) with simplemap.
Mapping IIR_Filter.$procmux$25 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$28 ($or) with simplemap.
Mapping IIR_Filter.$procmux$31 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$34 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$37 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$40 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$43 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$46 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$49 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$52 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$55 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$58 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$61 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$64 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$67 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$70 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$73 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$76 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$79 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$82 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$85 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$88 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$91 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$94 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$97 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$103 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$106 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$109 ($mux) with simplemap.
Mapping IIR_Filter.$procmux$112 ($mux) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$114 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$116 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$118 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$120 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:238:make_hold$122 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$126 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$132 ($and) with simplemap.

2.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 12
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=16\Y_WIDTH=16'.

2.18.3. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$171 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=16\Y_WIDTH=16.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$138 ($and) with simplemap.

2.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 3
Parameter \Y_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3'.

2.18.5. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$144 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:251:make_hold$150 ($and) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:408:proc_dlatch$154 ($not) with simplemap.
Mapping IIR_Filter.$auto$proc_dlatch.cc:408:proc_dlatch$156 ($dlatch) with simplemap.
Mapping IIR_Filter.$procdff$157 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$158 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$159 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$160 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$161 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$162 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$163 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$164 ($dff) with simplemap.
Mapping IIR_Filter.$procdff$165 ($dff) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$218 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$220 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$222 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$224 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$226 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$228 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$230 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$232 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$234 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$236 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$238 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$240 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$242 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$244 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$246 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:82:add$248 ($and) with simplemap.

2.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_fa'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_fa\WIDTH=16'.

2.18.7. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$252 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$255 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$258 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$261 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$264 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$267 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$270 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$273 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$276 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$279 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$282 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$285 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$288 using $paramod\_90_fa\WIDTH=16.
Mapping IIR_Filter.$auto$maccmap.cc:114:fulladd$291 using $paramod\_90_fa\WIDTH=16.

2.18.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 16
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16'.

2.18.9. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$292 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:262$795 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:263$796 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.$and$<techmap.v>:260$794 ($and) with simplemap.

2.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=16'.

yosys [$paramod\_90_lcu\WIDTH=16]> proc

2.18.11. Executing PROC pass (convert processes to netlists).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_clean

2.18.11.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=16]> proc_rmdead

2.18.11.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys [$paramod\_90_lcu\WIDTH=16]> proc_init

2.18.11.3. Executing PROC_INIT pass (extract init attributes).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_arst

2.18.11.4. Executing PROC_ARST pass (detect async resets in processes).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_mux

2.18.11.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1287'.
     1/32: $0\p[15:0] [14]
     2/32: $0\g[15:0] [14]
     3/32: $0\p[15:0] [12]
     4/32: $0\g[15:0] [12]
     5/32: $0\p[15:0] [10]
     6/32: $0\g[15:0] [10]
     7/32: $0\p[15:0] [8]
     8/32: $0\g[15:0] [8]
     9/32: $0\p[15:0] [6]
    10/32: $0\g[15:0] [6]
    11/32: $0\p[15:0] [4]
    12/32: $0\g[15:0] [4]
    13/32: $0\p[15:0] [2]
    14/32: $0\g[15:0] [2]
    15/32: $0\p[15:0] [13]
    16/32: $0\g[15:0] [13]
    17/32: $0\p[15:0] [9]
    18/32: $0\g[15:0] [9]
    19/32: $0\p[15:0] [5]
    20/32: $0\g[15:0] [5]
    21/32: $0\p[15:0] [11]
    22/32: $0\g[15:0] [11]
    23/32: $0\p[15:0] [15]
    24/32: $0\g[15:0] [15]
    25/32: $0\p[15:0] [7]
    26/32: $0\g[15:0] [7]
    27/32: $0\p[15:0] [3]
    28/32: $0\g[15:0] [3]
    29/32: $0\p[15:0] [1]
    30/32: $0\g[15:0] [1]
    31/32: $0\g[15:0] [0]
    32/32: $0\p[15:0] [0]

yosys [$paramod\_90_lcu\WIDTH=16]> proc_dlatch

2.18.11.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\g' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1287'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\p' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1287'.

yosys [$paramod\_90_lcu\WIDTH=16]> proc_dff

2.18.11.7. Executing PROC_DFF pass (convert process syncs to FFs).

yosys [$paramod\_90_lcu\WIDTH=16]> proc_clean

2.18.11.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$1287'.
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=16]> opt -fast

2.18.12. Executing OPT pass (performing simple optimizations).

yosys [$paramod\_90_lcu\WIDTH=16]> opt_expr

2.18.12.1. Executing OPT_EXPR pass (perform const folding).

yosys [$paramod\_90_lcu\WIDTH=16]> opt_merge

2.18.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=16'.
Removed a total of 0 cells.

yosys [$paramod\_90_lcu\WIDTH=16]> opt_rmdff

2.18.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys [$paramod\_90_lcu\WIDTH=16]> opt_clean

2.18.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=16..
  removing unused `$and' cell `$and$<techmap.v>:222$1292'.
  removing unused `$and' cell `$and$<techmap.v>:222$1316'.
  removing unused `$and' cell `$and$<techmap.v>:222$1328'.
  removing unused `$and' cell `$and$<techmap.v>:222$1334'.
  removing unused `$and' cell `$and$<techmap.v>:230$1337'.
  removing unused `$and' cell `$and$<techmap.v>:230$1340'.
  removing unused `$and' cell `$and$<techmap.v>:230$1343'.
  removing unused `$and' cell `$and$<techmap.v>:230$1346'.
  removing unused `$and' cell `$and$<techmap.v>:230$1349'.
  removing unused `$and' cell `$and$<techmap.v>:230$1352'.
  removing unused `$and' cell `$and$<techmap.v>:230$1355'.
  removing unused `$and' cell `$and$<techmap.v>:230$1358'.
  removing unused `$and' cell `$and$<techmap.v>:230$1361'.
  removing unused `$and' cell `$and$<techmap.v>:230$1364'.
  removing unused `$and' cell `$and$<techmap.v>:230$1367'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

2.18.12.5. Finished fast OPT passes.

2.18.13. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$171.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793 ($mux) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.$not$<techmap.v>:258$792 ($not) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$171.B_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$171.A_conv ($pos) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:263$802 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$800 ($and) with simplemap.

2.18.14. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=3'.

yosys [$paramod\_90_lcu\WIDTH=3]> proc

2.18.15. Executing PROC pass (convert processes to netlists).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_clean

2.18.15.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=3]> proc_rmdead

2.18.15.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys [$paramod\_90_lcu\WIDTH=3]> proc_init

2.18.15.3. Executing PROC_INIT pass (extract init attributes).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_arst

2.18.15.4. Executing PROC_ARST pass (detect async resets in processes).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_mux

2.18.15.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$1416'.
     1/6: $0\p[2:0] [2]
     2/6: $0\g[2:0] [2]
     3/6: $0\p[2:0] [1]
     4/6: $0\g[2:0] [1]
     5/6: $0\g[2:0] [0]
     6/6: $0\p[2:0] [0]

yosys [$paramod\_90_lcu\WIDTH=3]> proc_dlatch

2.18.15.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\g' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$1416'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=3.\p' from process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$1416'.

yosys [$paramod\_90_lcu\WIDTH=3]> proc_dff

2.18.15.7. Executing PROC_DFF pass (convert process syncs to FFs).

yosys [$paramod\_90_lcu\WIDTH=3]> proc_clean

2.18.15.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=3.$proc$<techmap.v>:207$1416'.
Cleaned up 0 empty switches.

yosys [$paramod\_90_lcu\WIDTH=3]> opt -fast

2.18.16. Executing OPT pass (performing simple optimizations).

yosys [$paramod\_90_lcu\WIDTH=3]> opt_expr

2.18.16.1. Executing OPT_EXPR pass (perform const folding).

yosys [$paramod\_90_lcu\WIDTH=3]> opt_merge

2.18.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=3'.
Removed a total of 0 cells.

yosys [$paramod\_90_lcu\WIDTH=3]> opt_rmdff

2.18.16.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys [$paramod\_90_lcu\WIDTH=3]> opt_clean

2.18.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=3..
  removing unused `$and' cell `$and$<techmap.v>:222$1421'.
  removing unused `$and' cell `$and$<techmap.v>:230$1424'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

2.18.16.5. Finished fast OPT passes.

2.18.17. Continuing TECHMAP pass.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168.lcu using $paramod\_90_lcu\WIDTH=3.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$799 ($mux) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.$not$<techmap.v>:258$798 ($not) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168.B_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$alumacc.cc:470:replace_alu$168.A_conv ($pos) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1366 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1363 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1360 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1357 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1354 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1351 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1348 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1345 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1342 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1339 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:229$1336 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1333 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1330 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1327 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1324 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1321 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1318 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1315 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1312 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1309 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1306 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1303 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1300 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1297 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1294 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1291 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:212$1289 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1365 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1362 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1359 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1356 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1353 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1350 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1347 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1344 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1341 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1338 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1335 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1331 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1325 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1322 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1319 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1313 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1310 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1307 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1304 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1301 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1298 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:222$1295 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1332 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1329 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1326 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1323 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1320 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1317 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1314 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1311 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1308 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1305 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1302 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1299 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1296 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1293 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1290 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:212$1288 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:212$1418 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1422 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1419 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:212$1417 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$252.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$252.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$252.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$255.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$267.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$276.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203 ($xor) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201 ($and) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$292.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200 ($mux) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199 ($not) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$292.B_conv ($pos) with simplemap.
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$292.A_conv ($pos) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:221$1420 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$or$<techmap.v>:229$1423 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:212$1288 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1290 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1293 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1296 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1299 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1302 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1305 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1308 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1311 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1314 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1317 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1320 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1323 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1326 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1329 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1332 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1295 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1298 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1301 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1304 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1307 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1310 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1313 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1319 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1322 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1325 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:222$1331 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1335 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1338 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1341 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1344 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1347 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1350 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1353 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1356 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1359 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1362 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1365 ($and) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:212$1289 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1291 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1294 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1297 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1300 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1303 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1306 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1309 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1312 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1315 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1318 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1321 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1324 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1327 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1330 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1333 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1336 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1339 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1342 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1345 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1348 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1351 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1354 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1357 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1360 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1363 ($or) with simplemap.
Mapping IIR_Filter.$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:229$1366 ($or) with simplemap.
No more expansions possible.

yosys> opt -fast

2.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1383' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [15] = \result [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1382' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [14] = \result [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1381' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [13] = \result [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1380' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [12] = \result [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1379' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [11] = \result [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1378' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [10] = \result [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1377' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [9] = \result [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1376' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [8] = \result [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1375' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [7] = \result [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1374' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [6] = \result [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1373' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [5] = \result [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1372' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [4] = \result [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$305' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$301 [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$304' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$301 [1] = \phase [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$318' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$314 [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$316' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$314 [0] = \phase [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$331' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$327 [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$342' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$340 [0] = \phase [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$343' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$340 [1] = \phase [1]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$642' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$658' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$674' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$690' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$706' in module `IIR_Filter'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1369' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [1] = \result [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1368' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [0] = \result [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1370' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [2] = \result [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$355' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$353 [0] = \phase [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$382' (?0) in module `\IIR_Filter' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$379 [1] = \phase [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1426' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$799_Y [1] = \phase [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1401' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [1] = \phase [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1425' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$799_Y [0] = \phase [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1407' (1?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$800_Y [0] = \phase [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1499' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:212$1417_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1496' (?0) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [0] = \phase [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$392' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1403' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:263$802_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1427' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$ternary$<techmap.v>:258$799_Y [2] = \phase [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1402' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [2] = \phase [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1408' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$800_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2701' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [1] = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:221$1419_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1182' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1165' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1133' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1149' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1887' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1855' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1871' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1839' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1164' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1132' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1148' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1886' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1822' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1116' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1084' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1100' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1806' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1742' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1115' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1083' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1099' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1805' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1773' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1789' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1757' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2126' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2094' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2110' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2078' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1067' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1035' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$231 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1051' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1725' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1693' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1709' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1677' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1019' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$229 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$987' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$225 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1003' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$227 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1645' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1613' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1629' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1597' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1068' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1036' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$231 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1052' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1726' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1662' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2046' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2014' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2030' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1998' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1823' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1117' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1085' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1101' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1807' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1743' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1774' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1790' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1758' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2127' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2063' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2287' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2255' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2271' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2239' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2448' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2416' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2432' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2400' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1183' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1166' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1134' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1150' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1888' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1856' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1872' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1840' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2095' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2111' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2079' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1694' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1710' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1678' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1020' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$229 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$988' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$225 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1004' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$227 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1646' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1614' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1630' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1598' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1069' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1037' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$231 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1053' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1727' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1663' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2047' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2015' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2031' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1999' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1824' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1118' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1086' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1102' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1808' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1744' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1775' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1791' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1759' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2128' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2064' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2288' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2256' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2272' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2240' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2449' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2385' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2096' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2112' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2080' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1695' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1711' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1679' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1021' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$229 [3] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$641' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$657' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$673' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$689' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$705' in module `IIR_Filter'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1005' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$227 [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1647' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:189$1194_Y [3] = $auto$rtlil.cc:1629:And$225 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1615' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1631' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1599' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1070' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1038' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$231 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1054' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1728' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1664' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2048' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2016' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2032' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2000' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1167' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1135' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1151' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1889' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1825' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1119' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1087' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1103' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1809' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1745' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1776' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1792' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1760' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2129' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2065' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2289' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2225' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1696' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1712' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1680' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1022' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$229 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1616' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1600' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$or$<techmap.v>:190$1198_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1071' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1039' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$231 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1055' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1729' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1665' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2049' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1985' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [4]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$643' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$659' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$675' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$691' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$707' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$644' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$660' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$676' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$692' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$708' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$646' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$662' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$678' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$694' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$710' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$645' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$661' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$677' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$693' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$709' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1584' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:190$1197_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1984' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1583' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:190$1197_Y [3] = $auto$rtlil.cc:1629:And$225 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2176' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2160' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$or$<techmap.v>:190$1198_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1195_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2305' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2224' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2144' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:190$1197_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1983' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1582' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$971' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$223 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1533' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1517' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$or$<techmap.v>:190$1198_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$and$<techmap.v>:189$1195_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1934' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1918' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$or$<techmap.v>:190$1198_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1195_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2175' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2159' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$or$<techmap.v>:190$1198_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1195_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2336' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2320' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2465' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2384' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2304' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2223' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2143' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:190$1197_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1982' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1902' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:190$1197_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1581' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1501' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:190$1197_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$970' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$223 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$954' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$221 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1564' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1532' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1548' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1516' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1965' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1933' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1949' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1917' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2206' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2174' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2190' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2158' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2367' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2335' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2351' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2319' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2528' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2496' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2512' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2480' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2609' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2545' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1181' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1854' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1870' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1838' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1163' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1131' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1147' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1885' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1821' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1741' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1114' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1082' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1098' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1804' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1772' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1788' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1756' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2125' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2093' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2109' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2077' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1066' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1034' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$231 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1050' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1724' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1692' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1708' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1676' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1018' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$229 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$986' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$225 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1002' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$227 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1644' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1612' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1628' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1596' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1661' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2045' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2013' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2029' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1997' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2062' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2286' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2254' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2270' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2238' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2447' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2415' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2431' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2399' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2464' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2383' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2303' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2222' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2142' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:190$1197_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1981' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1901' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:190$1197_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1580' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$255.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1500' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:190$1197_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1964' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1932' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1948' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1916' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2205' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2173' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2189' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2157' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2366' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2334' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2350' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2318' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2527' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2495' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2511' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2479' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2608' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2576' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2592' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2560' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [4] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2690' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2674' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2625' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2544' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1180' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1853' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1869' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1837' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1162' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1130' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1146' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1884' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1820' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1740' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2124' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2092' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2108' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2076' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1660' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2044' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2012' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2028' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1996' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2061' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2285' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2253' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2269' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2237' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2446' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2414' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2430' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2398' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2463' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2382' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2302' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2221' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2141' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:190$1197_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1980' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1900' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:190$1197_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2204' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2172' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2188' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2156' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2365' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2333' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2349' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2317' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2526' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2494' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2510' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2478' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2607' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2575' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2591' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2559' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2689' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2673' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2657' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2624' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1179' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1852' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1868' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1836' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2060' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2284' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2252' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2268' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2236' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2445' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2413' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2429' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2397' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2462' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2381' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2301' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2220' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2140' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:190$1197_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2364' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2332' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2348' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2316' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2525' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2493' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2509' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2477' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2606' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2542' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1178' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2444' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2412' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2428' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2396' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2461' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2380' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2300' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2524' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2492' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2508' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2476' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2605' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2573' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2589' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2557' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2687' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2671' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2622' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2543' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2574' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2590' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2558' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2688' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2672' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2623' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2541' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2460' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2604' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2572' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2588' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2556' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [0] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2686' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2670' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2654' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2621' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2540' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2685' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [0] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2669' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2653' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2620' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2703' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:212$1288_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2741' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2704' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1290_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2742' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2712' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1314_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2656' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2655' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2705' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1293_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2743' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1294_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2750' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2735' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1350_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2762' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2641' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2640' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1495' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:212$1288_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1457' (?0) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$173 [0] = $techmap$auto$alumacc.cc:470:replace_alu$171.$and$<techmap.v>:260$794_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1220' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:263$796_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:262$795_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2417' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2433' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2401' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1184' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1857' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1873' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1841' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2257' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2273' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2241' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2450' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2386' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2097' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2113' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2081' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2017' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2033' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2001' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1168' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1136' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1152' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1890' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1826' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1120' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1088' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1104' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1810' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1746' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1777' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1793' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1761' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2130' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2066' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2290' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2226' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1697' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1713' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1681' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1072' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1056' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$233 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1730' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [6] = $auto$rtlil.cc:1629:And$231 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1666' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [6] = $auto$rtlil.cc:1629:And$231 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1986' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [6]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$647' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$663' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$679' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$695' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$711' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2306' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:190$1197_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$282.$xor$<techmap.v>:189$1194_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2337' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2321' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2466' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2497' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2481' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2546' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2577' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2593' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2561' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [5] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2691' (0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$not$<techmap.v>:258$1199_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2675' (010) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2626' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2731' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1338_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2658' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2706' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1296_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2744' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1297_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2758' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [5] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2642' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1371' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$ternary$<techmap.v>:258$793_Y [3] = \result [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2418' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2434' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2402' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1185' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1858' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1874' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1842' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2258' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2274' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2242' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2451' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2387' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2098' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2114' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2082' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2018' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2002' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1169' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1137' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1153' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1891' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1827' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1121' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1089' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1105' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1811' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1747' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1778' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1794' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1762' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2131' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2067' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2291' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2227' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1698' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1714' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1682' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1073' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$235 [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1667' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:190$1197_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$258.$xor$<techmap.v>:189$1194_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1987' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:190$1197_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$270.$xor$<techmap.v>:189$1194_Y [7]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$648' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$664' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$680' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$696' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$712' in module `IIR_Filter'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2338' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2322' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$282.$or$<techmap.v>:190$1198_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$282.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2467' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2498' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2482' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2547' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2578' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2562' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2676' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2659' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2736' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1353_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2763' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [6] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2643' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [7] = $techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:262$1202_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2419' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2435' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2403' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1186' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1859' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1875' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1843' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2259' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2275' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2243' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2452' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2388' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2099' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2115' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2083' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2019' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2003' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$270.$or$<techmap.v>:190$1198_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1170' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1138' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1154' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1892' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1828' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1122' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1090' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$237 [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1106' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1812' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1748' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1779' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1795' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1763' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [7] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2132' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2068' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2292' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2228' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$270.$and$<techmap.v>:189$1195_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1699' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1683' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$258.$or$<techmap.v>:190$1198_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$258.$and$<techmap.v>:189$1195_Y [7]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$649' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$665' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$681' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$697' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$713' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2468' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2499' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2483' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2548' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2579' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2563' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2677' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2716' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1326_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2713' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1317_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2707' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:221$1299_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2745' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1300_Y = $techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2751' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$or$<techmap.v>:221$1318_Y = $techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2754' (?0) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [7] = $techmap$auto$maccmap.cc:240:synth$292.$and$<techmap.v>:260$1201_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2420' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2436' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2404' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1187' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1860' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1876' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1844' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2260' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2276' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2244' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2453' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2389' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2100' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2116' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2084' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1171' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1139' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1155' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1893' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1829' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1123' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1107' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$239 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1813' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [9] = $auto$rtlil.cc:1629:And$237 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1749' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [9] = $auto$rtlil.cc:1629:And$237 [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1780' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1796' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1764' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2133' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [9] = $auto$rtlil.cc:1629:And$237 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2069' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [9] = $auto$rtlil.cc:1629:And$237 [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2229' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [9]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$650' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$666' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$682' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$698' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$714' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2469' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:190$1197_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$288.$xor$<techmap.v>:189$1194_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2500' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2484' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2549' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2580' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2564' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2678' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2421' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2437' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2405' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1188' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1861' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1877' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1845' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2261' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2245' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2454' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2390' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2101' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2117' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2085' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1172' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1140' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1156' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1894' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1830' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1124' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$241 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1750' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:190$1197_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1781' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1797' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1765' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2134' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2070' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$261.$xor$<techmap.v>:189$1194_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2230' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [10]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$651' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$667' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$683' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$699' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$715' in module `IIR_Filter'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2501' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2485' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$288.$or$<techmap.v>:190$1198_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$288.$and$<techmap.v>:189$1195_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2550' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2581' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2565' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2679' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2422' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2438' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2406' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1189' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1862' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1878' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1846' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2262' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2246' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2455' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2391' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2102' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2118' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2086' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1173' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1141' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$243 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1157' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1895' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1831' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1782' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1196_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1766' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$261.$or$<techmap.v>:190$1198_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$261.$and$<techmap.v>:189$1195_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2071' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:190$1197_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$273.$xor$<techmap.v>:189$1194_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2231' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:190$1197_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$279.$xor$<techmap.v>:189$1194_Y [11]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$652' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$668' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$684' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$700' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$716' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2551' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2582' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2566' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2680' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2423' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2439' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2407' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1190' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1863' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1879' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1847' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2263' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1196_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2247' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2456' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2392' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$279.$and$<techmap.v>:189$1195_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2103' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1196_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2087' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$273.$or$<techmap.v>:190$1198_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$273.$and$<techmap.v>:189$1195_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1174' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1158' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$245 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1896' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [12] = $auto$rtlil.cc:1629:And$243 [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1832' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [12] = $auto$rtlil.cc:1629:And$243 [12]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$653' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$669' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$685' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$701' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$717' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2552' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2583' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2567' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2681' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2424' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2440' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2408' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1191' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1864' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1880' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1848' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2457' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2393' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$279.$or$<techmap.v>:190$1198_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1175' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$247 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1833' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:190$1197_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$264.$xor$<techmap.v>:189$1194_Y [13]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$654' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$670' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$686' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$702' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$718' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2553' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2584' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2568' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2682' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2425' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2441' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2409' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1192' (const_and) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1629:And$249 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1865' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1196_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1849' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$264.$or$<techmap.v>:190$1198_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$264.$and$<techmap.v>:189$1195_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2394' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:190$1197_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$285.$xor$<techmap.v>:189$1194_Y [14]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$655' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$671' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$687' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$703' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$719' in module `IIR_Filter'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2554' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:190$1197_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$291.$xor$<techmap.v>:189$1194_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2585' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2569' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2683' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2426' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1196_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2410' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$285.$or$<techmap.v>:190$1198_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$285.$and$<techmap.v>:189$1195_Y [14]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$656' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$672' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$688' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$704' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$720' in module `IIR_Filter'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2586' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1196_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2570' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$291.$or$<techmap.v>:190$1198_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2684' (??0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$ternary$<techmap.v>:258$1200_Y [15] = $techmap$auto$maccmap.cc:114:fulladd$291.$and$<techmap.v>:189$1195_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1216' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:262$795_Y [12] = \result [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1217' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:262$795_Y [13] = \result [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1249' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$and$<techmap.v>:260$794_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1432' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$173 [12] = $techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1362_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1218' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:262$795_Y [14] = \result [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1250' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$and$<techmap.v>:260$794_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1488' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1308_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1450' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1309_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1438' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$173 [13] = $techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1344_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1219' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:262$795_Y [15] = \result [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1251' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$and$<techmap.v>:260$794_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1431' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$173 [14] = $techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:229$1365_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$418' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$417' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$419' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$420' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$421' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$422' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$423' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$424' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$425' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$426' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$427' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$428' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$429' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$430' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$431' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$432' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$466' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$465' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$467' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$468' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$469' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$470' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$471' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$472' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$473' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$474' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$475' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$476' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$477' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$478' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$479' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$480' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$722' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$721' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$723' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$724' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$725' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$726' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$727' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$728' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$729' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$730' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$731' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$732' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$733' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$734' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$735' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$736' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$738' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$737' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$739' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$740' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$741' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$742' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$743' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$744' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$745' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$746' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$747' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$748' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$749' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$750' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$751' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$752' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$754' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$753' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$755' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$756' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$757' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$758' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$759' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$760' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$761' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$762' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$763' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$764' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$765' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$766' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$767' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$768' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$770' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$769' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$771' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$772' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$773' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$774' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$775' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$776' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$777' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$778' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$779' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$780' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$781' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$782' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$783' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$784' in module `IIR_Filter'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$785' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$115 = $auto$simplemap.cc:168:logic_reduce$298'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$786' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$117 = $auto$simplemap.cc:256:simplemap_eqne$306'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$787' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$119 = $auto$simplemap.cc:256:simplemap_eqne$319'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$788' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$121 = $auto$simplemap.cc:256:simplemap_eqne$332'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$789' (double_invert) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1600:Not$123 = $auto$simplemap.cc:256:simplemap_eqne$345'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$790' (?1) in module `\IIR_Filter' with constant driver `$auto$rtlil.cc:1604:ReduceOr$129 = $auto$simplemap.cc:256:simplemap_eqne$345'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1252' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$and$<techmap.v>:260$794_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1487' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1311_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1449' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1312_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1483' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1323_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1445' (00) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1324_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1443' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$or$<techmap.v>:221$1330_Y = $techmap$auto$alumacc.cc:470:replace_alu$171.lcu.$and$<techmap.v>:221$1329_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1236' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$171.$xor$<techmap.v>:263$796_Y [16] = $auto$alumacc.cc:484:replace_alu$173 [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1409' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$and$<techmap.v>:260$800_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2702' (0?) in module `\IIR_Filter' with constant driver `$auto$alumacc.cc:484:replace_alu$170 [2] = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1422_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1406' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:263$802_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$168.lcu.$and$<techmap.v>:229$1422_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2637' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$252.$xor$<techmap.v>:189$1194_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2636' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [0] = $auto$rtlil.cc:1629:And$219 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2638' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$267.$xor$<techmap.v>:189$1194_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2734' (const_and) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.lcu.$and$<techmap.v>:229$1347_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2761' (00) in module `\IIR_Filter' with constant driver `$auto$maccmap.cc:247:synth$295 [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2639' (?0) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$276.$xor$<techmap.v>:189$1194_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2652' (0?) in module `\IIR_Filter' with constant driver `$techmap$auto$maccmap.cc:240:synth$292.$xor$<techmap.v>:263$1203_Y [16] = $auto$maccmap.cc:247:synth$295 [15]'.

yosys> opt_merge

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$381' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1400'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$379 [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$381' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$368' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1400'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$366 [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$368' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$370' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$383'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$366 [2] = $auto$simplemap.cc:250:simplemap_eqne$379 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$370' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$356' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$369'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$353 [1] = $auto$simplemap.cc:250:simplemap_eqne$366 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$356' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$357' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$383'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$353 [2] = $auto$simplemap.cc:250:simplemap_eqne$379 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$357' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$344' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$383'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$340 [2] = $auto$simplemap.cc:250:simplemap_eqne$379 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$344' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$330' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$369'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$327 [1] = $auto$simplemap.cc:250:simplemap_eqne$366 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$330' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$329' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1400'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$327 [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$329' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$317' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$369'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$314 [1] = $auto$simplemap.cc:250:simplemap_eqne$366 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$317' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$303' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1400'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$301 [0] = $techmap$auto$alumacc.cc:470:replace_alu$168.$xor$<techmap.v>:262$801_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$303' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:177:logic_reduce$297' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$348'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$296 = $auto$simplemap.cc:127:simplemap_reduce$347
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$297' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$335' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$374'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$334 = $auto$simplemap.cc:127:simplemap_reduce$373
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$335' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$322' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$361'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$321 = $auto$simplemap.cc:127:simplemap_reduce$360
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$322' from module `\IIR_Filter'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$309' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$387'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$308 = $auto$simplemap.cc:127:simplemap_reduce$386
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$309' from module `\IIR_Filter'.
Removed a total of 14 cells.

yosys> opt_rmdff

2.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1389'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1388'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1387'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1386'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1384'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1385'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$300'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$313'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$326'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$339'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$352'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$365'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$378'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$391'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$938'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1390'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1391'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1392'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1393'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1394'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1395'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1396'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1397'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1398'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1399'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1429'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1428'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1430'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1442'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1469'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1470'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1473'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1480'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1481'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1497'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1531'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1547'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1563'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1565'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1611'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1627'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1643'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1691'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1707'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1723'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1771'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1787'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1803'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1851'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1867'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1883'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1931'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1947'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1963'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1966'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2011'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2027'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2043'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2091'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2107'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2123'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2171'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2187'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2203'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2207'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2251'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2267'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2283'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2331'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2347'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2363'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2411'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2427'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2443'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2491'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2507'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2523'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2571'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2587'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2603'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2668'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2692'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2693'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2694'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2695'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2696'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2697'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2698'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2699'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2700'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2711'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2715'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2717'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2718'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2719'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2720'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2721'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2725'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2726'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2728'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2729'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2749'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2753'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2755'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2756'.

2.19.5. Finished fast OPT passes.

yosys> abc -fast

2.20. Executing ABC pass (technology mapping using ABC).

2.20.1. Extracting gate netlist of module `\IIR_Filter' to `<abc-temp-dir>/input.blif'..
Extracted 1192 gates and 1424 wires to a netlist network with 230 inputs and 133 outputs.

2.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

2.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      326
ABC RESULTS:              AOI3 cells:       70
ABC RESULTS:              AOI4 cells:        5
ABC RESULTS:               MUX cells:      225
ABC RESULTS:              NAND cells:       36
ABC RESULTS:               NOR cells:      103
ABC RESULTS:               NOT cells:       90
ABC RESULTS:              OAI3 cells:       30
ABC RESULTS:              OAI4 cells:        6
ABC RESULTS:                OR cells:       27
ABC RESULTS:              XNOR cells:       56
ABC RESULTS:               XOR cells:      217
ABC RESULTS:        internal signals:     1061
ABC RESULTS:           input signals:      230
ABC RESULTS:          output signals:      133
Removing temp directory.

yosys> opt -fast

2.21. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3700' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3696' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3691' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3687' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3674' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3579' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3471' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3380' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3285' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3209' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3135' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3066' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$3007' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$2955' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$2909' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$2871' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$2785' in module `IIR_Filter'.
Optimizing away select inverter for $_MUX_ cell `$abc$2768$auto$blifparse.cc:286:parse_blif$2781' in module `IIR_Filter'.

yosys> opt_merge

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused non-port wire \samplevalue.
  removed 1 unused temporary wires.

2.21.5. Finished fast OPT passes.

yosys> hierarchy -check

2.22. Executing HIERARCHY pass (managing design hierarchy).

2.22.1. Analyzing design hierarchy..
Top module:  \IIR_Filter

2.22.2. Analyzing design hierarchy..
Top module:  \IIR_Filter
Removed 0 unused modules.

yosys> stat

2.23. Printing statistics.

=== IIR_Filter ===

   Number of wires:               1089
   Number of wire bits:           1438
   Number of public wires:          20
   Number of public wire bits:     247
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1323
     $_AND_                        326
     $_AOI3_                        70
     $_AOI4_                         5
     $_DFF_P_                      116
     $_DLATCH_P_                    16
     $_MUX_                        225
     $_NAND_                        36
     $_NOR_                        103
     $_NOT_                         90
     $_OAI3_                        30
     $_OAI4_                         6
     $_OR_                          27
     $_XNOR_                        56
     $_XOR_                        217


yosys> check

2.24. Executing CHECK pass (checking for obvious problems).
checking module IIR_Filter..
found and reported 0 problems.

yosys> opt

3. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.1. Executing OPT_EXPR pass (perform const folding).

yosys> opt_merge -nomux

3.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

yosys> opt_merge

3.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

yosys> opt_rmdff

3.6. Executing OPT_RMDFF pass (remove dff with constant values).

yosys> opt_clean

3.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).

3.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt_clean -purge

4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
  removing unused non-port wire \Yt.
  removed 1 unused temporary wires.

yosys> dfflibmap -liberty /home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib

5. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_1 (noninv, pins=3, area=20.02) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtn_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_NN0_.
  cell sky130_fd_sc_hd__dfrtp_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_NNN_.
  cell sky130_fd_sc_hd__dfbbp_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFF_NN0_.
  create mapping for $_DFF_PP0_ from mapping for $_DFF_PN0_.
  create mapping for $_DFF_PP1_ from mapping for $_DFF_PN1_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFF_NN1_ from mapping for $_DFF_NN0_.
  create mapping for $_DFF_NP1_ from mapping for $_DFF_NN1_.
  create mapping for $_DFF_N_ from mapping for $_DFF_P_.
  final dff cell mappings:
    sky130_fd_sc_hd__dfxtp_1 _DFF_N_ (.CLK(~C), .D( D), .Q( Q));
    sky130_fd_sc_hd__dfxtp_1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NN0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B( R));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NN1_ (.CLK_N( C), .D(~D), .Q(~Q), .RESET_B( R));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NP0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B(~R));
    sky130_fd_sc_hd__dfrtn_1 _DFF_NP1_ (.CLK_N( C), .D(~D), .Q(~Q), .RESET_B(~R));
    sky130_fd_sc_hd__dfrtp_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    sky130_fd_sc_hd__dfrtp_1 _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .RESET_B(~R));
    sky130_fd_sc_hd__dfstp_2 _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .SET_B(~R));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNP_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B( S));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NPN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B(~S));
    sky130_fd_sc_hd__dfbbn_1 _DFFSR_NPP_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B(~S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B( S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B(~S));
    sky130_fd_sc_hd__dfbbp_1 _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B(~R), .SET_B(~S));
Mapping DFF cells in module `\IIR_Filter':
  mapped 116 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.

yosys> abc -liberty /home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\IIR_Filter' to `<abc-temp-dir>/input.blif'..
Extracted 1191 gates and 1421 wires to a netlist network with 230 inputs and 133 outputs.

6.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.08 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/icarosix/asictoolchain/OpenLane/pdks/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + dc2 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -o 
ABC: + strash 
ABC: + dch -f 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:      161
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      125
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso0p_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:      301
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:      184
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       51
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:      236
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:      130
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_1 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__xnor3_4 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:       31
ABC RESULTS:        internal signals:     1058
ABC RESULTS:           input signals:      230
ABC RESULTS:          output signals:      133
Removing temp directory.

yosys> insbuf -buf sky130_fd_sc_hd__buf_2 A X

7. Executing INSBUF pass (insert buffer cells for connected wires).
Added IIR_Filter.$auto$insbuf.cc:79:execute$5519: \cycle_valid -> $abc$3960$n0
Added IIR_Filter.$auto$insbuf.cc:79:execute$5520: \phase [0] -> $abc$3960$n2
Added IIR_Filter.$auto$insbuf.cc:79:execute$5521: \phase [1] -> $abc$3960$n4
Added IIR_Filter.$auto$insbuf.cc:79:execute$5522: \phase [2] -> $abc$3960$n6
Added IIR_Filter.$auto$insbuf.cc:79:execute$5523: \rst -> $abc$3960$n10
Added IIR_Filter.$auto$insbuf.cc:79:execute$5524: $abc$3960$n11 -> $0\cycle_valid[0:0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5525: $abc$3960$n14 -> $0\phase[2:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5526: $abc$3960$n18 -> $0\phase[2:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5527: $abc$3960$n22 -> $0\phase[2:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5528: \result [0] -> $abc$3960$n23
Added IIR_Filter.$auto$insbuf.cc:79:execute$5529: \Y1 [4] -> $abc$3960$n30
Added IIR_Filter.$auto$insbuf.cc:79:execute$5530: \Y2 [4] -> $abc$3960$n35
Added IIR_Filter.$auto$insbuf.cc:79:execute$5531: \X3 [4] -> $abc$3960$n38
Added IIR_Filter.$auto$insbuf.cc:79:execute$5532: \X2 [4] -> $abc$3960$n40
Added IIR_Filter.$auto$insbuf.cc:79:execute$5533: \X1 [4] -> $abc$3960$n42
Added IIR_Filter.$auto$insbuf.cc:79:execute$5534: \coeff [0] -> $abc$3960$n44
Added IIR_Filter.$auto$insbuf.cc:79:execute$5535: \coeff [1] -> $abc$3960$n46
Added IIR_Filter.$auto$insbuf.cc:79:execute$5536: \X1 [3] -> $abc$3960$n48
Added IIR_Filter.$auto$insbuf.cc:79:execute$5537: \X2 [3] -> $abc$3960$n50
Added IIR_Filter.$auto$insbuf.cc:79:execute$5538: \X3 [3] -> $abc$3960$n52
Added IIR_Filter.$auto$insbuf.cc:79:execute$5539: \Y2 [3] -> $abc$3960$n56
Added IIR_Filter.$auto$insbuf.cc:79:execute$5540: \Y1 [3] -> $abc$3960$n59
Added IIR_Filter.$auto$insbuf.cc:79:execute$5541: \Y1 [2] -> $abc$3960$n66
Added IIR_Filter.$auto$insbuf.cc:79:execute$5542: \Y2 [2] -> $abc$3960$n68
Added IIR_Filter.$auto$insbuf.cc:79:execute$5543: \X3 [2] -> $abc$3960$n71
Added IIR_Filter.$auto$insbuf.cc:79:execute$5544: \X2 [2] -> $abc$3960$n73
Added IIR_Filter.$auto$insbuf.cc:79:execute$5545: \X1 [2] -> $abc$3960$n75
Added IIR_Filter.$auto$insbuf.cc:79:execute$5546: \coeff [2] -> $abc$3960$n77
Added IIR_Filter.$auto$insbuf.cc:79:execute$5547: \Y1 [1] -> $abc$3960$n84
Added IIR_Filter.$auto$insbuf.cc:79:execute$5548: \Y2 [1] -> $abc$3960$n86
Added IIR_Filter.$auto$insbuf.cc:79:execute$5549: \X3 [1] -> $abc$3960$n89
Added IIR_Filter.$auto$insbuf.cc:79:execute$5550: \X2 [1] -> $abc$3960$n91
Added IIR_Filter.$auto$insbuf.cc:79:execute$5551: \X1 [1] -> $abc$3960$n93
Added IIR_Filter.$auto$insbuf.cc:79:execute$5552: \coeff [3] -> $abc$3960$n99
Added IIR_Filter.$auto$insbuf.cc:79:execute$5553: \Y1 [0] -> $abc$3960$n101
Added IIR_Filter.$auto$insbuf.cc:79:execute$5554: \Y2 [0] -> $abc$3960$n103
Added IIR_Filter.$auto$insbuf.cc:79:execute$5555: \X3 [0] -> $abc$3960$n106
Added IIR_Filter.$auto$insbuf.cc:79:execute$5556: \X2 [0] -> $abc$3960$n108
Added IIR_Filter.$auto$insbuf.cc:79:execute$5557: \X1 [0] -> $abc$3960$n110
Added IIR_Filter.$auto$insbuf.cc:79:execute$5558: \coeff [4] -> $abc$3960$n112
Added IIR_Filter.$auto$insbuf.cc:79:execute$5559: $abc$3960$n140 -> $0\result[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5560: \result [1] -> $abc$3960$n141
Added IIR_Filter.$auto$insbuf.cc:79:execute$5561: \Y1 [5] -> $abc$3960$n143
Added IIR_Filter.$auto$insbuf.cc:79:execute$5562: \Y2 [5] -> $abc$3960$n145
Added IIR_Filter.$auto$insbuf.cc:79:execute$5563: \X3 [5] -> $abc$3960$n148
Added IIR_Filter.$auto$insbuf.cc:79:execute$5564: \X2 [5] -> $abc$3960$n150
Added IIR_Filter.$auto$insbuf.cc:79:execute$5565: \X1 [5] -> $abc$3960$n152
Added IIR_Filter.$auto$insbuf.cc:79:execute$5566: \coeff [5] -> $abc$3960$n166
Added IIR_Filter.$auto$insbuf.cc:79:execute$5567: $abc$3960$n184 -> $0\result[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5568: \X1 [6] -> $abc$3960$n185
Added IIR_Filter.$auto$insbuf.cc:79:execute$5569: \X2 [6] -> $abc$3960$n187
Added IIR_Filter.$auto$insbuf.cc:79:execute$5570: \X3 [6] -> $abc$3960$n189
Added IIR_Filter.$auto$insbuf.cc:79:execute$5571: \Y2 [6] -> $abc$3960$n191
Added IIR_Filter.$auto$insbuf.cc:79:execute$5572: \Y1 [6] -> $abc$3960$n194
Added IIR_Filter.$auto$insbuf.cc:79:execute$5573: \coeff [6] -> $abc$3960$n220
Added IIR_Filter.$auto$insbuf.cc:79:execute$5574: \result [2] -> $abc$3960$n231
Added IIR_Filter.$auto$insbuf.cc:79:execute$5575: $abc$3960$n237 -> $0\result[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5576: \result [3] -> $abc$3960$n238
Added IIR_Filter.$auto$insbuf.cc:79:execute$5577: \Y1 [7] -> $abc$3960$n240
Added IIR_Filter.$auto$insbuf.cc:79:execute$5578: \Y2 [7] -> $abc$3960$n242
Added IIR_Filter.$auto$insbuf.cc:79:execute$5579: \X3 [7] -> $abc$3960$n245
Added IIR_Filter.$auto$insbuf.cc:79:execute$5580: \X2 [7] -> $abc$3960$n247
Added IIR_Filter.$auto$insbuf.cc:79:execute$5581: \X1 [7] -> $abc$3960$n249
Added IIR_Filter.$auto$insbuf.cc:79:execute$5582: \coeff [7] -> $abc$3960$n273
Added IIR_Filter.$auto$insbuf.cc:79:execute$5583: $abc$3960$n296 -> $0\result[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5584: \Y1 [8] -> $abc$3960$n297
Added IIR_Filter.$auto$insbuf.cc:79:execute$5585: \Y2 [8] -> $abc$3960$n299
Added IIR_Filter.$auto$insbuf.cc:79:execute$5586: \X3 [8] -> $abc$3960$n302
Added IIR_Filter.$auto$insbuf.cc:79:execute$5587: \X2 [8] -> $abc$3960$n304
Added IIR_Filter.$auto$insbuf.cc:79:execute$5588: \X1 [8] -> $abc$3960$n306
Added IIR_Filter.$auto$insbuf.cc:79:execute$5589: \coeff [8] -> $abc$3960$n332
Added IIR_Filter.$auto$insbuf.cc:79:execute$5590: \result [4] -> $abc$3960$n353
Added IIR_Filter.$auto$insbuf.cc:79:execute$5591: $abc$3960$n362 -> $0\result[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5592: \result [5] -> $abc$3960$n363
Added IIR_Filter.$auto$insbuf.cc:79:execute$5593: \X1 [9] -> $abc$3960$n365
Added IIR_Filter.$auto$insbuf.cc:79:execute$5594: \X2 [9] -> $abc$3960$n367
Added IIR_Filter.$auto$insbuf.cc:79:execute$5595: \X3 [9] -> $abc$3960$n369
Added IIR_Filter.$auto$insbuf.cc:79:execute$5596: \Y2 [9] -> $abc$3960$n371
Added IIR_Filter.$auto$insbuf.cc:79:execute$5597: \Y1 [9] -> $abc$3960$n374
Added IIR_Filter.$auto$insbuf.cc:79:execute$5598: \coeff [9] -> $abc$3960$n417
Added IIR_Filter.$auto$insbuf.cc:79:execute$5599: $abc$3960$n438 -> $0\result[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5600: \Y1 [10] -> $abc$3960$n439
Added IIR_Filter.$auto$insbuf.cc:79:execute$5601: \Y2 [10] -> $abc$3960$n441
Added IIR_Filter.$auto$insbuf.cc:79:execute$5602: \X3 [10] -> $abc$3960$n444
Added IIR_Filter.$auto$insbuf.cc:79:execute$5603: \X2 [10] -> $abc$3960$n446
Added IIR_Filter.$auto$insbuf.cc:79:execute$5604: \X1 [10] -> $abc$3960$n448
Added IIR_Filter.$auto$insbuf.cc:79:execute$5605: \coeff [10] -> $abc$3960$n489
Added IIR_Filter.$auto$insbuf.cc:79:execute$5606: \result [6] -> $abc$3960$n509
Added IIR_Filter.$auto$insbuf.cc:79:execute$5607: $abc$3960$n519 -> $0\result[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5608: \result [7] -> $abc$3960$n520
Added IIR_Filter.$auto$insbuf.cc:79:execute$5609: \Y1 [11] -> $abc$3960$n522
Added IIR_Filter.$auto$insbuf.cc:79:execute$5610: \Y2 [11] -> $abc$3960$n524
Added IIR_Filter.$auto$insbuf.cc:79:execute$5611: \X3 [11] -> $abc$3960$n527
Added IIR_Filter.$auto$insbuf.cc:79:execute$5612: \X2 [11] -> $abc$3960$n529
Added IIR_Filter.$auto$insbuf.cc:79:execute$5613: \X1 [11] -> $abc$3960$n531
Added IIR_Filter.$auto$insbuf.cc:79:execute$5614: \coeff [11] -> $abc$3960$n574
Added IIR_Filter.$auto$insbuf.cc:79:execute$5615: $abc$3960$n602 -> $0\result[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5616: \result [8] -> $abc$3960$n603
Added IIR_Filter.$auto$insbuf.cc:79:execute$5617: \X1 [12] -> $abc$3960$n605
Added IIR_Filter.$auto$insbuf.cc:79:execute$5618: \X2 [12] -> $abc$3960$n607
Added IIR_Filter.$auto$insbuf.cc:79:execute$5619: \X3 [12] -> $abc$3960$n609
Added IIR_Filter.$auto$insbuf.cc:79:execute$5620: \Y2 [12] -> $abc$3960$n611
Added IIR_Filter.$auto$insbuf.cc:79:execute$5621: \Y1 [12] -> $abc$3960$n613
Added IIR_Filter.$auto$insbuf.cc:79:execute$5622: \coeff [12] -> $abc$3960$n667
Added IIR_Filter.$auto$insbuf.cc:79:execute$5623: $abc$3960$n704 -> $0\result[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5624: \result [9] -> $abc$3960$n705
Added IIR_Filter.$auto$insbuf.cc:79:execute$5625: \Y1 [13] -> $abc$3960$n707
Added IIR_Filter.$auto$insbuf.cc:79:execute$5626: \Y2 [13] -> $abc$3960$n709
Added IIR_Filter.$auto$insbuf.cc:79:execute$5627: \X3 [13] -> $abc$3960$n712
Added IIR_Filter.$auto$insbuf.cc:79:execute$5628: \X2 [13] -> $abc$3960$n714
Added IIR_Filter.$auto$insbuf.cc:79:execute$5629: \X1 [13] -> $abc$3960$n716
Added IIR_Filter.$auto$insbuf.cc:79:execute$5630: \coeff [13] -> $abc$3960$n769
Added IIR_Filter.$auto$insbuf.cc:79:execute$5631: $abc$3960$n802 -> $0\result[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5632: \result [10] -> $abc$3960$n803
Added IIR_Filter.$auto$insbuf.cc:79:execute$5633: \Y1 [14] -> $abc$3960$n805
Added IIR_Filter.$auto$insbuf.cc:79:execute$5634: \Y2 [14] -> $abc$3960$n807
Added IIR_Filter.$auto$insbuf.cc:79:execute$5635: \X3 [14] -> $abc$3960$n810
Added IIR_Filter.$auto$insbuf.cc:79:execute$5636: \X2 [14] -> $abc$3960$n812
Added IIR_Filter.$auto$insbuf.cc:79:execute$5637: \X1 [14] -> $abc$3960$n814
Added IIR_Filter.$auto$insbuf.cc:79:execute$5638: \coeff [14] -> $abc$3960$n876
Added IIR_Filter.$auto$insbuf.cc:79:execute$5639: $abc$3960$n917 -> $0\result[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5640: \X1 [15] -> $abc$3960$n918
Added IIR_Filter.$auto$insbuf.cc:79:execute$5641: \X2 [15] -> $abc$3960$n920
Added IIR_Filter.$auto$insbuf.cc:79:execute$5642: \X3 [15] -> $abc$3960$n922
Added IIR_Filter.$auto$insbuf.cc:79:execute$5643: \Y2 [15] -> $abc$3960$n924
Added IIR_Filter.$auto$insbuf.cc:79:execute$5644: \Y1 [15] -> $abc$3960$n926
Added IIR_Filter.$auto$insbuf.cc:79:execute$5645: \coeff [15] -> $abc$3960$n998
Added IIR_Filter.$auto$insbuf.cc:79:execute$5646: \result [11] -> $abc$3960$n1012
Added IIR_Filter.$auto$insbuf.cc:79:execute$5647: $abc$3960$n1019 -> $0\result[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5648: \result [12] -> $abc$3960$n1030
Added IIR_Filter.$auto$insbuf.cc:79:execute$5649: $abc$3960$n1033 -> $0\result[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5650: \result [13] -> $abc$3960$n1035
Added IIR_Filter.$auto$insbuf.cc:79:execute$5651: $abc$3960$n1038 -> $0\result[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5652: \result [14] -> $abc$3960$n1041
Added IIR_Filter.$auto$insbuf.cc:79:execute$5653: $abc$3960$n1044 -> $0\result[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5654: \result [15] -> $abc$3960$n1046
Added IIR_Filter.$auto$insbuf.cc:79:execute$5655: $abc$3960$n1049 -> $0\result[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5656: \Y [0] -> $abc$3960$n1051
Added IIR_Filter.$auto$insbuf.cc:79:execute$5657: $abc$3960$n1053 -> $0\Yt[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5658: \Y [1] -> $abc$3960$n1054
Added IIR_Filter.$auto$insbuf.cc:79:execute$5659: $abc$3960$n1056 -> $0\Yt[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5660: \Y [2] -> $abc$3960$n1057
Added IIR_Filter.$auto$insbuf.cc:79:execute$5661: $abc$3960$n1059 -> $0\Yt[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5662: \Y [3] -> $abc$3960$n1060
Added IIR_Filter.$auto$insbuf.cc:79:execute$5663: $abc$3960$n1062 -> $0\Yt[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5664: \Y [4] -> $abc$3960$n1063
Added IIR_Filter.$auto$insbuf.cc:79:execute$5665: $abc$3960$n1065 -> $0\Yt[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5666: \Y [5] -> $abc$3960$n1066
Added IIR_Filter.$auto$insbuf.cc:79:execute$5667: $abc$3960$n1068 -> $0\Yt[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5668: \Y [6] -> $abc$3960$n1069
Added IIR_Filter.$auto$insbuf.cc:79:execute$5669: $abc$3960$n1071 -> $0\Yt[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5670: \Y [7] -> $abc$3960$n1072
Added IIR_Filter.$auto$insbuf.cc:79:execute$5671: $abc$3960$n1074 -> $0\Yt[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5672: \Y [8] -> $abc$3960$n1075
Added IIR_Filter.$auto$insbuf.cc:79:execute$5673: $abc$3960$n1077 -> $0\Yt[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5674: \Y [9] -> $abc$3960$n1078
Added IIR_Filter.$auto$insbuf.cc:79:execute$5675: $abc$3960$n1080 -> $0\Yt[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5676: \Y [10] -> $abc$3960$n1081
Added IIR_Filter.$auto$insbuf.cc:79:execute$5677: $abc$3960$n1083 -> $0\Yt[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5678: \Y [11] -> $abc$3960$n1084
Added IIR_Filter.$auto$insbuf.cc:79:execute$5679: $abc$3960$n1086 -> $0\Yt[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5680: \Y [12] -> $abc$3960$n1087
Added IIR_Filter.$auto$insbuf.cc:79:execute$5681: $abc$3960$n1089 -> $0\Yt[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5682: \Y [13] -> $abc$3960$n1090
Added IIR_Filter.$auto$insbuf.cc:79:execute$5683: $abc$3960$n1092 -> $0\Yt[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5684: \Y [14] -> $abc$3960$n1093
Added IIR_Filter.$auto$insbuf.cc:79:execute$5685: $abc$3960$n1095 -> $0\Yt[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5686: \Y [15] -> $abc$3960$n1096
Added IIR_Filter.$auto$insbuf.cc:79:execute$5687: $abc$3960$n1098 -> $0\Yt[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5688: \en -> $abc$3960$n1099
Added IIR_Filter.$auto$insbuf.cc:79:execute$5689: $abc$3960$n1101 -> $0\Y2[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5690: $abc$3960$n1103 -> $0\Y2[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5691: $abc$3960$n1105 -> $0\Y2[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5692: $abc$3960$n1107 -> $0\Y2[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5693: $abc$3960$n1109 -> $0\Y2[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5694: $abc$3960$n1111 -> $0\Y2[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5695: $abc$3960$n1113 -> $0\Y2[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5696: $abc$3960$n1115 -> $0\Y2[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5697: $abc$3960$n1117 -> $0\Y2[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5698: $abc$3960$n1119 -> $0\Y2[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5699: $abc$3960$n1121 -> $0\Y2[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5700: $abc$3960$n1123 -> $0\Y2[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5701: $abc$3960$n1125 -> $0\Y2[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5702: $abc$3960$n1127 -> $0\Y2[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5703: $abc$3960$n1129 -> $0\Y2[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5704: $abc$3960$n1131 -> $0\Y2[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5705: $abc$3960$n1133 -> $0\Y1[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5706: $abc$3960$n1135 -> $0\Y1[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5707: $abc$3960$n1137 -> $0\Y1[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5708: $abc$3960$n1139 -> $0\Y1[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5709: $abc$3960$n1141 -> $0\Y1[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5710: $abc$3960$n1143 -> $0\Y1[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5711: $abc$3960$n1145 -> $0\Y1[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5712: $abc$3960$n1147 -> $0\Y1[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5713: $abc$3960$n1149 -> $0\Y1[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5714: $abc$3960$n1151 -> $0\Y1[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5715: $abc$3960$n1153 -> $0\Y1[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5716: $abc$3960$n1155 -> $0\Y1[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5717: $abc$3960$n1157 -> $0\Y1[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5718: $abc$3960$n1159 -> $0\Y1[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5719: $abc$3960$n1161 -> $0\Y1[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5720: $abc$3960$n1163 -> $0\Y1[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5721: $abc$3960$n1165 -> $0\X3[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5722: $abc$3960$n1167 -> $0\X3[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5723: $abc$3960$n1169 -> $0\X3[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5724: $abc$3960$n1171 -> $0\X3[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5725: $abc$3960$n1173 -> $0\X3[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5726: $abc$3960$n1175 -> $0\X3[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5727: $abc$3960$n1177 -> $0\X3[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5728: $abc$3960$n1179 -> $0\X3[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5729: $abc$3960$n1181 -> $0\X3[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5730: $abc$3960$n1183 -> $0\X3[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5731: $abc$3960$n1185 -> $0\X3[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5732: $abc$3960$n1187 -> $0\X3[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5733: $abc$3960$n1189 -> $0\X3[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5734: $abc$3960$n1191 -> $0\X3[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5735: $abc$3960$n1193 -> $0\X3[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5736: $abc$3960$n1195 -> $0\X3[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5737: $abc$3960$n1197 -> $0\X2[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5738: $abc$3960$n1199 -> $0\X2[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5739: $abc$3960$n1201 -> $0\X2[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5740: $abc$3960$n1203 -> $0\X2[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5741: $abc$3960$n1205 -> $0\X2[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5742: $abc$3960$n1207 -> $0\X2[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5743: $abc$3960$n1209 -> $0\X2[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5744: $abc$3960$n1211 -> $0\X2[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5745: $abc$3960$n1213 -> $0\X2[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5746: $abc$3960$n1215 -> $0\X2[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5747: $abc$3960$n1217 -> $0\X2[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5748: $abc$3960$n1219 -> $0\X2[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5749: $abc$3960$n1221 -> $0\X2[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5750: $abc$3960$n1223 -> $0\X2[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5751: $abc$3960$n1225 -> $0\X2[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5752: $abc$3960$n1227 -> $0\X2[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5753: \X [0] -> $abc$3960$n1228
Added IIR_Filter.$auto$insbuf.cc:79:execute$5754: $abc$3960$n1230 -> $0\X1[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5755: \X [1] -> $abc$3960$n1231
Added IIR_Filter.$auto$insbuf.cc:79:execute$5756: $abc$3960$n1233 -> $0\X1[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5757: \X [2] -> $abc$3960$n1234
Added IIR_Filter.$auto$insbuf.cc:79:execute$5758: $abc$3960$n1236 -> $0\X1[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5759: \X [3] -> $abc$3960$n1237
Added IIR_Filter.$auto$insbuf.cc:79:execute$5760: $abc$3960$n1239 -> $0\X1[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5761: \X [4] -> $abc$3960$n1240
Added IIR_Filter.$auto$insbuf.cc:79:execute$5762: $abc$3960$n1242 -> $0\X1[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5763: \X [5] -> $abc$3960$n1243
Added IIR_Filter.$auto$insbuf.cc:79:execute$5764: $abc$3960$n1245 -> $0\X1[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5765: \X [6] -> $abc$3960$n1246
Added IIR_Filter.$auto$insbuf.cc:79:execute$5766: $abc$3960$n1248 -> $0\X1[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5767: \X [7] -> $abc$3960$n1249
Added IIR_Filter.$auto$insbuf.cc:79:execute$5768: $abc$3960$n1251 -> $0\X1[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5769: \X [8] -> $abc$3960$n1252
Added IIR_Filter.$auto$insbuf.cc:79:execute$5770: $abc$3960$n1254 -> $0\X1[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5771: \X [9] -> $abc$3960$n1255
Added IIR_Filter.$auto$insbuf.cc:79:execute$5772: $abc$3960$n1257 -> $0\X1[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5773: \X [10] -> $abc$3960$n1258
Added IIR_Filter.$auto$insbuf.cc:79:execute$5774: $abc$3960$n1260 -> $0\X1[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5775: \X [11] -> $abc$3960$n1261
Added IIR_Filter.$auto$insbuf.cc:79:execute$5776: $abc$3960$n1263 -> $0\X1[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5777: \X [12] -> $abc$3960$n1264
Added IIR_Filter.$auto$insbuf.cc:79:execute$5778: $abc$3960$n1266 -> $0\X1[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5779: \X [13] -> $abc$3960$n1267
Added IIR_Filter.$auto$insbuf.cc:79:execute$5780: $abc$3960$n1269 -> $0\X1[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5781: \X [14] -> $abc$3960$n1270
Added IIR_Filter.$auto$insbuf.cc:79:execute$5782: $abc$3960$n1272 -> $0\X1[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5783: \X [15] -> $abc$3960$n1273
Added IIR_Filter.$auto$insbuf.cc:79:execute$5784: $abc$3960$n1275 -> $0\X1[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5785: \b2 [0] -> $abc$3960$n1276
Added IIR_Filter.$auto$insbuf.cc:79:execute$5786: \b1 [0] -> $abc$3960$n1277
Added IIR_Filter.$auto$insbuf.cc:79:execute$5787: \a2 [0] -> $abc$3960$n1279
Added IIR_Filter.$auto$insbuf.cc:79:execute$5788: \a1 [0] -> $abc$3960$n1281
Added IIR_Filter.$auto$insbuf.cc:79:execute$5789: \a0 [0] -> $abc$3960$n1283
Added IIR_Filter.$auto$insbuf.cc:79:execute$5790: $abc$3960$n1284 -> $0\coeff[15:0] [0]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5791: \b2 [1] -> $abc$3960$n1285
Added IIR_Filter.$auto$insbuf.cc:79:execute$5792: \b1 [1] -> $abc$3960$n1286
Added IIR_Filter.$auto$insbuf.cc:79:execute$5793: \a2 [1] -> $abc$3960$n1288
Added IIR_Filter.$auto$insbuf.cc:79:execute$5794: \a1 [1] -> $abc$3960$n1290
Added IIR_Filter.$auto$insbuf.cc:79:execute$5795: \a0 [1] -> $abc$3960$n1292
Added IIR_Filter.$auto$insbuf.cc:79:execute$5796: $abc$3960$n1293 -> $0\coeff[15:0] [1]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5797: \b2 [2] -> $abc$3960$n1294
Added IIR_Filter.$auto$insbuf.cc:79:execute$5798: \b1 [2] -> $abc$3960$n1295
Added IIR_Filter.$auto$insbuf.cc:79:execute$5799: \a2 [2] -> $abc$3960$n1297
Added IIR_Filter.$auto$insbuf.cc:79:execute$5800: \a1 [2] -> $abc$3960$n1299
Added IIR_Filter.$auto$insbuf.cc:79:execute$5801: \a0 [2] -> $abc$3960$n1301
Added IIR_Filter.$auto$insbuf.cc:79:execute$5802: $abc$3960$n1302 -> $0\coeff[15:0] [2]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5803: \b2 [3] -> $abc$3960$n1303
Added IIR_Filter.$auto$insbuf.cc:79:execute$5804: \b1 [3] -> $abc$3960$n1304
Added IIR_Filter.$auto$insbuf.cc:79:execute$5805: \a2 [3] -> $abc$3960$n1306
Added IIR_Filter.$auto$insbuf.cc:79:execute$5806: \a1 [3] -> $abc$3960$n1308
Added IIR_Filter.$auto$insbuf.cc:79:execute$5807: \a0 [3] -> $abc$3960$n1310
Added IIR_Filter.$auto$insbuf.cc:79:execute$5808: $abc$3960$n1311 -> $0\coeff[15:0] [3]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5809: \b2 [4] -> $abc$3960$n1312
Added IIR_Filter.$auto$insbuf.cc:79:execute$5810: \b1 [4] -> $abc$3960$n1313
Added IIR_Filter.$auto$insbuf.cc:79:execute$5811: \a2 [4] -> $abc$3960$n1315
Added IIR_Filter.$auto$insbuf.cc:79:execute$5812: \a1 [4] -> $abc$3960$n1317
Added IIR_Filter.$auto$insbuf.cc:79:execute$5813: \a0 [4] -> $abc$3960$n1319
Added IIR_Filter.$auto$insbuf.cc:79:execute$5814: $abc$3960$n1320 -> $0\coeff[15:0] [4]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5815: \b2 [5] -> $abc$3960$n1321
Added IIR_Filter.$auto$insbuf.cc:79:execute$5816: \b1 [5] -> $abc$3960$n1322
Added IIR_Filter.$auto$insbuf.cc:79:execute$5817: \a2 [5] -> $abc$3960$n1324
Added IIR_Filter.$auto$insbuf.cc:79:execute$5818: \a1 [5] -> $abc$3960$n1326
Added IIR_Filter.$auto$insbuf.cc:79:execute$5819: \a0 [5] -> $abc$3960$n1328
Added IIR_Filter.$auto$insbuf.cc:79:execute$5820: $abc$3960$n1329 -> $0\coeff[15:0] [5]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5821: \b2 [6] -> $abc$3960$n1330
Added IIR_Filter.$auto$insbuf.cc:79:execute$5822: \b1 [6] -> $abc$3960$n1331
Added IIR_Filter.$auto$insbuf.cc:79:execute$5823: \a2 [6] -> $abc$3960$n1333
Added IIR_Filter.$auto$insbuf.cc:79:execute$5824: \a1 [6] -> $abc$3960$n1335
Added IIR_Filter.$auto$insbuf.cc:79:execute$5825: \a0 [6] -> $abc$3960$n1337
Added IIR_Filter.$auto$insbuf.cc:79:execute$5826: $abc$3960$n1338 -> $0\coeff[15:0] [6]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5827: \b2 [7] -> $abc$3960$n1339
Added IIR_Filter.$auto$insbuf.cc:79:execute$5828: \b1 [7] -> $abc$3960$n1340
Added IIR_Filter.$auto$insbuf.cc:79:execute$5829: \a2 [7] -> $abc$3960$n1342
Added IIR_Filter.$auto$insbuf.cc:79:execute$5830: \a1 [7] -> $abc$3960$n1344
Added IIR_Filter.$auto$insbuf.cc:79:execute$5831: \a0 [7] -> $abc$3960$n1346
Added IIR_Filter.$auto$insbuf.cc:79:execute$5832: $abc$3960$n1347 -> $0\coeff[15:0] [7]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5833: \b2 [8] -> $abc$3960$n1348
Added IIR_Filter.$auto$insbuf.cc:79:execute$5834: \b1 [8] -> $abc$3960$n1349
Added IIR_Filter.$auto$insbuf.cc:79:execute$5835: \a2 [8] -> $abc$3960$n1351
Added IIR_Filter.$auto$insbuf.cc:79:execute$5836: \a1 [8] -> $abc$3960$n1353
Added IIR_Filter.$auto$insbuf.cc:79:execute$5837: \a0 [8] -> $abc$3960$n1355
Added IIR_Filter.$auto$insbuf.cc:79:execute$5838: $abc$3960$n1356 -> $0\coeff[15:0] [8]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5839: \b2 [9] -> $abc$3960$n1357
Added IIR_Filter.$auto$insbuf.cc:79:execute$5840: \b1 [9] -> $abc$3960$n1358
Added IIR_Filter.$auto$insbuf.cc:79:execute$5841: \a2 [9] -> $abc$3960$n1360
Added IIR_Filter.$auto$insbuf.cc:79:execute$5842: \a1 [9] -> $abc$3960$n1362
Added IIR_Filter.$auto$insbuf.cc:79:execute$5843: \a0 [9] -> $abc$3960$n1364
Added IIR_Filter.$auto$insbuf.cc:79:execute$5844: $abc$3960$n1365 -> $0\coeff[15:0] [9]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5845: \b2 [10] -> $abc$3960$n1366
Added IIR_Filter.$auto$insbuf.cc:79:execute$5846: \b1 [10] -> $abc$3960$n1367
Added IIR_Filter.$auto$insbuf.cc:79:execute$5847: \a2 [10] -> $abc$3960$n1369
Added IIR_Filter.$auto$insbuf.cc:79:execute$5848: \a1 [10] -> $abc$3960$n1371
Added IIR_Filter.$auto$insbuf.cc:79:execute$5849: \a0 [10] -> $abc$3960$n1373
Added IIR_Filter.$auto$insbuf.cc:79:execute$5850: $abc$3960$n1374 -> $0\coeff[15:0] [10]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5851: \b2 [11] -> $abc$3960$n1375
Added IIR_Filter.$auto$insbuf.cc:79:execute$5852: \b1 [11] -> $abc$3960$n1376
Added IIR_Filter.$auto$insbuf.cc:79:execute$5853: \a2 [11] -> $abc$3960$n1378
Added IIR_Filter.$auto$insbuf.cc:79:execute$5854: \a1 [11] -> $abc$3960$n1380
Added IIR_Filter.$auto$insbuf.cc:79:execute$5855: \a0 [11] -> $abc$3960$n1382
Added IIR_Filter.$auto$insbuf.cc:79:execute$5856: $abc$3960$n1383 -> $0\coeff[15:0] [11]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5857: \b2 [12] -> $abc$3960$n1384
Added IIR_Filter.$auto$insbuf.cc:79:execute$5858: \b1 [12] -> $abc$3960$n1385
Added IIR_Filter.$auto$insbuf.cc:79:execute$5859: \a2 [12] -> $abc$3960$n1387
Added IIR_Filter.$auto$insbuf.cc:79:execute$5860: \a1 [12] -> $abc$3960$n1389
Added IIR_Filter.$auto$insbuf.cc:79:execute$5861: \a0 [12] -> $abc$3960$n1391
Added IIR_Filter.$auto$insbuf.cc:79:execute$5862: $abc$3960$n1392 -> $0\coeff[15:0] [12]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5863: \b2 [13] -> $abc$3960$n1393
Added IIR_Filter.$auto$insbuf.cc:79:execute$5864: \b1 [13] -> $abc$3960$n1394
Added IIR_Filter.$auto$insbuf.cc:79:execute$5865: \a2 [13] -> $abc$3960$n1396
Added IIR_Filter.$auto$insbuf.cc:79:execute$5866: \a1 [13] -> $abc$3960$n1398
Added IIR_Filter.$auto$insbuf.cc:79:execute$5867: \a0 [13] -> $abc$3960$n1400
Added IIR_Filter.$auto$insbuf.cc:79:execute$5868: $abc$3960$n1401 -> $0\coeff[15:0] [13]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5869: \b2 [14] -> $abc$3960$n1402
Added IIR_Filter.$auto$insbuf.cc:79:execute$5870: \b1 [14] -> $abc$3960$n1403
Added IIR_Filter.$auto$insbuf.cc:79:execute$5871: \a2 [14] -> $abc$3960$n1405
Added IIR_Filter.$auto$insbuf.cc:79:execute$5872: \a1 [14] -> $abc$3960$n1407
Added IIR_Filter.$auto$insbuf.cc:79:execute$5873: \a0 [14] -> $abc$3960$n1409
Added IIR_Filter.$auto$insbuf.cc:79:execute$5874: $abc$3960$n1410 -> $0\coeff[15:0] [14]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5875: \b2 [15] -> $abc$3960$n1411
Added IIR_Filter.$auto$insbuf.cc:79:execute$5876: \b1 [15] -> $abc$3960$n1412
Added IIR_Filter.$auto$insbuf.cc:79:execute$5877: \a2 [15] -> $abc$3960$n1414
Added IIR_Filter.$auto$insbuf.cc:79:execute$5878: \a1 [15] -> $abc$3960$n1416
Added IIR_Filter.$auto$insbuf.cc:79:execute$5879: \a0 [15] -> $abc$3960$n1418
Added IIR_Filter.$auto$insbuf.cc:79:execute$5880: $abc$3960$n1419 -> $0\coeff[15:0] [15]
Added IIR_Filter.$auto$insbuf.cc:79:execute$5881: $abc$3960$n1420 -> $abc$2768$n642

yosys> stat

8. Printing statistics.

=== IIR_Filter ===

   Number of wires:               2876
   Number of wire bits:           3210
   Number of public wires:          19
   Number of public wire bits:     231
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2053
     $_DLATCH_P_                    16
     sky130_fd_sc_hd__a2111oi_0      1
     sky130_fd_sc_hd__a211o_2        2
     sky130_fd_sc_hd__a211oi_1      30
     sky130_fd_sc_hd__a21boi_0      16
     sky130_fd_sc_hd__a21o_2         9
     sky130_fd_sc_hd__a21oi_1      161
     sky130_fd_sc_hd__a221oi_1       3
     sky130_fd_sc_hd__a22o_2         4
     sky130_fd_sc_hd__a22oi_1       10
     sky130_fd_sc_hd__a2bb2oi_1      2
     sky130_fd_sc_hd__a31oi_1        5
     sky130_fd_sc_hd__a32oi_1        1
     sky130_fd_sc_hd__a41oi_1        1
     sky130_fd_sc_hd__and2_2         7
     sky130_fd_sc_hd__and3_2        20
     sky130_fd_sc_hd__buf_2        363
     sky130_fd_sc_hd__clkinv_1     125
     sky130_fd_sc_hd__dfxtp_1      116
     sky130_fd_sc_hd__lpflow_inputiso0p_1      3
     sky130_fd_sc_hd__mux2i_1       29
     sky130_fd_sc_hd__nand2_1      301
     sky130_fd_sc_hd__nand3_1      184
     sky130_fd_sc_hd__nand3b_1       8
     sky130_fd_sc_hd__nand4_1       51
     sky130_fd_sc_hd__nor2_1       236
     sky130_fd_sc_hd__nor3_1        29
     sky130_fd_sc_hd__nor3b_1       10
     sky130_fd_sc_hd__nor4_1         3
     sky130_fd_sc_hd__o2111ai_1      8
     sky130_fd_sc_hd__o211a_1        3
     sky130_fd_sc_hd__o211ai_1      15
     sky130_fd_sc_hd__o21a_1         6
     sky130_fd_sc_hd__o21ai_0      130
     sky130_fd_sc_hd__o21bai_1      20
     sky130_fd_sc_hd__o221ai_1       3
     sky130_fd_sc_hd__o22ai_1       25
     sky130_fd_sc_hd__o2bb2ai_1     18
     sky130_fd_sc_hd__o311ai_0       7
     sky130_fd_sc_hd__o31ai_1        5
     sky130_fd_sc_hd__or2_2          8
     sky130_fd_sc_hd__or2b_2         1
     sky130_fd_sc_hd__or3_2          1
     sky130_fd_sc_hd__xnor2_1       13
     sky130_fd_sc_hd__xnor3_4       13
     sky130_fd_sc_hd__xor2_1        31


yosys> write_verilog ./results/IIR_Filter.synth.v

9. Executing Verilog backend.
Dumping module `\IIR_Filter'.

End of script. Logfile hash: 66666e8c46
CPU: user 0.65s system 0.02s, MEM: 197.75 MB total, 40.21 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 21% 1x dfflibmap (0 sec), 14% 15x opt_expr (0 sec), ...
